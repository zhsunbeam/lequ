<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>极乐空间</title>
  
  <subtitle>安静的来点代码</subtitle>
  <link href="https://zhsunbeam.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhsunbeam.github.io/"/>
  <updated>2022-07-29T13:53:32.420Z</updated>
  <id>https://zhsunbeam.github.io/</id>
  
  <author>
    <name>Mars笑笑生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>(九) JavaScript-Canvas 雪花飘</title>
    <link href="https://zhsunbeam.github.io/2022/07/26/JavaScript/(9)-JavaScript-Canvas%E9%9B%AA%E8%8A%B1%E9%A3%98/"/>
    <id>https://zhsunbeam.github.io/2022/07/26/JavaScript/(9)-JavaScript-Canvas%E9%9B%AA%E8%8A%B1%E9%A3%98/</id>
    <published>2022-07-26T11:05:00.000Z</published>
    <updated>2022-07-29T13:53:32.420Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h3 id="旋转的图片"><a href="#旋转的图片" class="headerlink" title="旋转的图片"></a>旋转的图片</h3><p><img src="/2022/07/26/JavaScript/(9)-JavaScript-Canvas%E9%9B%AA%E8%8A%B1%E9%A3%98/1.gif"></p><h2 id="九-JavaScript-Canvas-雪花飘"><a href="#九-JavaScript-Canvas-雪花飘" class="headerlink" title="(九) JavaScript-Canvas 雪花飘"></a>(九) JavaScript-Canvas 雪花飘</h2><blockquote><p> 上一篇中让图片转了起来， 本篇自己设计一张图形，然后让图形转动； 在网页代码中要注意，设计了两个Canvas，两个Canvas的位置在CSS中有具体的描述。其中第一个画布准备画一个图形，然后再将图形整体画到第二个画布上</p></blockquote><h3 id="1-设计网页代码"><a href="#1-设计网页代码" class="headerlink" title="1. 设计网页代码"></a>1. 设计网页代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas1</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">11</span>, <span class="number">4</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">z-index</span>: <span class="number">11</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas2</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">11</span>, <span class="number">4</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">z-index</span>: -<span class="number">11</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//第一个画布</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas1&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx1 = canvas1.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas1.width = <span class="number">200</span></span></span><br><span class="line"><span class="javascript">        canvas1.height= <span class="number">200</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//画布设置</span></span></span><br><span class="line"><span class="javascript">        ctx1.lineCap = <span class="string">&#x27;round&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//阴影设置</span></span></span><br><span class="line"><span class="javascript">        ctx1.shadowColor = <span class="string">&#x27;rgba(0,0,0,0.7)&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        ctx1.shadowOffsetX = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">        ctx1.shadowOffsetY = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">        ctx1.shadowBlur = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//第二个画布</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas2 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas2&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx2 = canvas2.getContext(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        canvas2.width = <span class="built_in">window</span>.innerWidth;</span></span><br><span class="line"><span class="javascript">        canvas2.height = <span class="built_in">window</span>.innerHeight;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-先画几根线"><a href="#1-先画几根线" class="headerlink" title="1. 先画几根线"></a>1. 先画几根线</h4><ul><li><p>定义一个画线函数</p></li><li><p>设定线从坐标(0,0) 开始，线长100, 线宽4, 颜色orange</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawLine</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx1.beginPath() </span><br><span class="line">    ctx1.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    ctx1.lineTo(<span class="number">100</span>, <span class="number">0</span>)</span><br><span class="line">    ctx1.lineWidth=<span class="number">4</span></span><br><span class="line">    ctx1.strokeStyle=<span class="string">&#x27;orange&#x27;</span></span><br><span class="line">    ctx1.stroke()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-定义一个draw函数，绕中心点画多根线"><a href="#2-定义一个draw函数，绕中心点画多根线" class="headerlink" title="2. 定义一个draw函数，绕中心点画多根线"></a>2. 定义一个draw函数，绕中心点画多根线</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawLine</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx1.beginPath() </span><br><span class="line">    ctx1.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    ctx1.lineTo(<span class="number">100</span>, <span class="number">0</span>)</span><br><span class="line">    ctx1.lineWidth=<span class="number">4</span></span><br><span class="line">    ctx1.strokeStyle=<span class="string">&#x27;orange&#x27;</span></span><br><span class="line">    ctx1.stroke()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//注意save方法</span></span><br><span class="line">    ctx1.save()</span><br><span class="line">    <span class="comment">//将原点平移到中心位置</span></span><br><span class="line">    ctx1.translate( canvas1.width/<span class="number">2</span>,  canvas1.height/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)&#123; <span class="comment">//线条数量</span></span><br><span class="line">        <span class="comment">//旋转</span></span><br><span class="line">        ctx1.rotate((<span class="built_in">Math</span>.PI * <span class="number">2</span>)/<span class="number">12</span>);<span class="comment">//旋转度数 2PI 除以 线条数目</span></span><br><span class="line">        drawLine();<span class="comment">//画线</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//恢复状态</span></span><br><span class="line">    ctx1.restore()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">draw() <span class="comment">//调用绘图函数</span></span><br></pre></td></tr></table></figure><p>绘图结果</p><p><img src="/2022/07/26/JavaScript/(9)-JavaScript-Canvas%E9%9B%AA%E8%8A%B1%E9%A3%98/2.png"></p><h4 id="3-将绘制在Canvas1上面的图形转换为图片"><a href="#3-将绘制在Canvas1上面的图形转换为图片" class="headerlink" title="3. 将绘制在Canvas1上面的图形转换为图片"></a>3. 将绘制在Canvas1上面的图形转换为图片</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> image = <span class="keyword">new</span> Image()</span><br><span class="line">image.src = canvas1.toDataURL();</span><br></pre></td></tr></table></figure><h4 id="4-图片旋转"><a href="#4-图片旋转" class="headerlink" title="4. 图片旋转"></a>4. 图片旋转</h4><ul><li>注意一定要注册一个事件，图片加载完成后才能进入动画</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">image.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> angle = <span class="number">1</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//先清空，再平移</span></span><br><span class="line">        ctx2.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas2.width, canvas2.height)</span><br><span class="line">        ctx2.save() </span><br><span class="line">        <span class="comment">//将图片移到canvas2的中心位置</span></span><br><span class="line">        ctx2.translate(canvas2.width/<span class="number">2</span>-<span class="number">100</span>, canvas2.height/<span class="number">2</span>-<span class="number">100</span>) </span><br><span class="line">        <span class="comment">//旋转角度</span></span><br><span class="line">        ctx2.rotate(angle * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">        <span class="comment">//画图</span></span><br><span class="line">        ctx2.drawImage(image, <span class="number">0</span>-<span class="number">100</span>, <span class="number">0</span>-<span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">        ctx2.restore();</span><br><span class="line">        angle += <span class="number">4</span> <span class="comment">//更新角度</span></span><br><span class="line">        <span class="built_in">window</span>.requestAnimationFrame(animate)</span><br><span class="line">    &#125;</span><br><span class="line">    animate()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-完整代码如下"><a href="#5-完整代码如下" class="headerlink" title="5. 完整代码如下"></a>5. 完整代码如下</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        </span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas1</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">11</span>, <span class="number">4</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">z-index</span>: <span class="number">11</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas2</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">11</span>, <span class="number">4</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">z-index</span>: -<span class="number">11</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas1&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx1 = canvas1.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas1.width = <span class="number">200</span></span></span><br><span class="line"><span class="javascript">        canvas1.height= <span class="number">200</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//画布设置</span></span></span><br><span class="line"><span class="javascript">        ctx1.lineCap = <span class="string">&#x27;round&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//阴影设置</span></span></span><br><span class="line"><span class="javascript">        ctx1.shadowColor = <span class="string">&#x27;rgba(0,0,0,0.7)&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        ctx1.shadowOffsetX = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">        ctx1.shadowOffsetY = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">        ctx1.shadowBlur = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//第二个画布</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas2 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas2&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx2 = canvas2.getContext(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        canvas2.width = <span class="built_in">window</span>.innerWidth;</span></span><br><span class="line"><span class="javascript">        canvas2.height = <span class="built_in">window</span>.innerHeight;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">drawLine</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            ctx1.beginPath() </span></span><br><span class="line"><span class="javascript">            ctx1.moveTo(<span class="number">0</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">            ctx1.lineTo(<span class="number">100</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">            ctx1.lineWidth=<span class="number">4</span></span></span><br><span class="line"><span class="javascript">            ctx1.strokeStyle=<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line"><span class="javascript">            ctx1.stroke()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            ctx1.save()</span></span><br><span class="line"><span class="javascript">            ctx1.translate( canvas1.width/<span class="number">2</span>,  canvas1.height/<span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)&#123; </span></span><br><span class="line"><span class="javascript">                ctx1.rotate((<span class="built_in">Math</span>.PI * <span class="number">2</span>)/<span class="number">12</span>); </span></span><br><span class="line"><span class="javascript">                drawLine(); </span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            ctx1.restore()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        draw()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> image = <span class="keyword">new</span> Image()</span></span><br><span class="line"><span class="javascript">        image.src = canvas1.toDataURL();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        image.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> angle = <span class="number">1</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                ctx2.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas2.width, canvas2.height)</span></span><br><span class="line"><span class="javascript">                ctx2.save() </span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                ctx2.translate(canvas2.width/<span class="number">2</span>-<span class="number">100</span>, canvas2.height/<span class="number">2</span>-<span class="number">100</span>)               </span></span><br><span class="line"><span class="javascript">                ctx2.rotate(angle * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span></span><br><span class="line"><span class="javascript">                ctx2.drawImage(image, <span class="number">0</span>-<span class="number">100</span>, <span class="number">0</span>-<span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">                ctx2.restore();</span></span><br><span class="line"><span class="javascript">                angle+=<span class="number">4</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.requestAnimationFrame(animate)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            animate()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>多一些图形旋转，每个图形的大小可自由设置，垂直飘落, 后面章节再完善</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(八) JavaScript-Canvas旋转的图片</title>
    <link href="https://zhsunbeam.github.io/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/"/>
    <id>https://zhsunbeam.github.io/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/</id>
    <published>2022-07-25T01:05:00.000Z</published>
    <updated>2022-07-25T09:38:29.112Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h3 id="旋转的图片"><a href="#旋转的图片" class="headerlink" title="旋转的图片"></a>旋转的图片</h3><p><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/1.gif"></p><h2 id="八-JavaScript-Canvas旋转的图片"><a href="#八-JavaScript-Canvas旋转的图片" class="headerlink" title="(八) JavaScript-Canvas旋转的图片"></a>(八) JavaScript-Canvas旋转的图片</h2><blockquote><p>使用 Image类型创建图片对象, 自定义类 Picture</p></blockquote><h3 id="1-设计网页代码"><a href="#1-设计网页代码" class="headerlink" title="1. 设计网页代码"></a>1. 设计网页代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>旋转的图片<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: black;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//创建图片对象</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建一个Image对象"><a href="#2-创建一个Image对象" class="headerlink" title="2. 创建一个Image对象"></a>2. 创建一个Image对象</h3><ul><li>使用 Image 创建一个对象，设置对象的src属性，表示图片的路径，此处将图片和页面放置在同一目录下，所以只需图片名称</li><li><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/cherry.png"></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建图片对象</span></span><br><span class="line"><span class="keyword">const</span> cherry = <span class="keyword">new</span> Image()</span><br><span class="line">cherry.src = <span class="string">&#x27;cherry.png&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-在Canvas-Context上-画图"><a href="#3-在Canvas-Context上-画图" class="headerlink" title="3. 在Canvas Context上 画图"></a>3. 在Canvas Context上 画图</h3><ul><li>图片是异步加载所以需要监听图片加载事件load, 加载完成后才能将图片画到Canvas上</li><li>使用translate平移坐标到(100,100), 为了清楚的了解后续图片的旋转</li><li>使用rotate 旋转 canvas 0度，也就是不旋转</li><li>再增加一个填充矩形，清楚图片位置，无其它作用</li><li>drawImage 画图，第1个参数为图片对象，第2，3个参数表示图片的坐标，第4，5个参数表示图片宽和高</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cherry.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    ctx.translate(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">    ctx.rotate(<span class="number">0</span> * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;black&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">&#125;) </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如图</p><p><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/2.png"></p><h3 id="4-再画一个位置不同的图"><a href="#4-再画一个位置不同的图" class="headerlink" title="4. 再画一个位置不同的图"></a>4. 再画一个位置不同的图</h3><ul><li>图片的位置还是平移100，但此时会发现，平移是相对于上面的图片位置</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cherry.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    ctx.translate(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">    ctx.rotate(<span class="number">0</span> * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;black&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line"></span><br><span class="line">    ctx.translate(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">    ctx.rotate(<span class="number">0</span> * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;orange&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">&#125;) </span><br></pre></td></tr></table></figure><p>效果如图</p><p><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/3.png"></p><h3 id="5-使用save和restore方法"><a href="#5-使用save和restore方法" class="headerlink" title="5. 使用save和restore方法"></a>5. 使用save和restore方法</h3><ul><li>使用这两个方法后，恢复之前的状态，其实就是将save()之后的绘图操作入栈，调用restore()后出栈，也就是恢复到当前绘图之前的状态，后续画图会使用save()之前的状态</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cherry.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    ctx.save()</span><br><span class="line">    ctx.translate(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">    ctx.rotate(<span class="number">0</span> * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;black&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">    ctx.restore()</span><br><span class="line"></span><br><span class="line">    ctx.translate(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;orange&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">&#125;) </span><br></pre></td></tr></table></figure><p>效果如图:  桔色背景的图片旋转了30度，平移的位置相对于最开始时的状态; 如果桔色背景下方还要画图，也可以加上save和restore，使得桔色图形的属性设置不会影响后续图形</p><p><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/4.png"></p><h3 id="6-让图片旋转起来"><a href="#6-让图片旋转起来" class="headerlink" title="6. 让图片旋转起来"></a>6. 让图片旋转起来</h3><ul><li>将绘图代码封装成函数，然后利用window.requestAnimationFrame函数让图片旋转起来</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cherry = <span class="keyword">new</span> Image()</span><br><span class="line">cherry.src = <span class="string">&#x27;cherry.png&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> angle1 = <span class="number">1</span> <span class="comment">//第一张图片的旋转角度</span></span><br><span class="line"><span class="keyword">let</span> angle2 = <span class="number">10</span> <span class="comment">//第二张图片折旋转角度</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//第一张图片</span></span><br><span class="line">    ctx.save()</span><br><span class="line">    ctx.translate(canvas.width/<span class="number">2</span>,canvas.height/<span class="number">2</span>)</span><br><span class="line">    ctx.rotate(angle1 * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;black&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">300</span>,<span class="number">300</span>)</span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">    ctx.restore()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二张图片</span></span><br><span class="line">    ctx.save()</span><br><span class="line">    ctx.translate(canvas.width/<span class="number">2</span>,canvas.height/<span class="number">2</span>)</span><br><span class="line">    ctx.rotate(angle2 * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;orange&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">300</span>,<span class="number">300</span>)</span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">    ctx.restore()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图片加载完成后调用draw方法</span></span><br><span class="line">cherry.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    draw()</span><br><span class="line"></span><br><span class="line">&#125;) </span><br><span class="line"></span><br><span class="line"><span class="comment">//动画函数 animate, 不断地调用画图函数，同时更改两个角度值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width, canvas.height)</span><br><span class="line">    draw() </span><br><span class="line">    angle1+=<span class="number">1</span></span><br><span class="line">    angle2+=<span class="number">10</span></span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame(animate)</span><br><span class="line">&#125;</span><br><span class="line">animate()</span><br></pre></td></tr></table></figure><p>效果如图， 也可以去掉矩形填充</p><p><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/5.gif"></p><p><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/6.gif"></p><h3 id="7-旋转的中心点改成图片中心"><a href="#7-旋转的中心点改成图片中心" class="headerlink" title="7. 旋转的中心点改成图片中心"></a>7. 旋转的中心点改成图片中心</h3><ul><li>在画图时改变一下图片的起始绘制坐标</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> angle1 = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> angle2 = <span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx.save()</span><br><span class="line">    ctx.translate(canvas.width/<span class="number">2</span>,canvas.height/<span class="number">2</span>)</span><br><span class="line">    ctx.rotate(angle1 * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;black&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">300</span>,<span class="number">300</span>)</span><br><span class="line">    <span class="comment">//更改画图片时的起始坐标</span></span><br><span class="line">    ctx.drawImage(cherry, <span class="number">0</span>-<span class="number">80</span>/<span class="number">2</span>, <span class="number">0</span>-<span class="number">80</span>/<span class="number">2</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">    ctx.restore()</span><br><span class="line"></span><br><span class="line">    ctx.save()</span><br><span class="line">    ctx.translate(canvas.width/<span class="number">2</span>,canvas.height/<span class="number">2</span>)</span><br><span class="line">    ctx.rotate(angle2 * <span class="built_in">Math</span>.PI/<span class="number">360</span>)</span><br><span class="line">    ctx.fillStyle= <span class="string">&#x27;orange&#x27;</span></span><br><span class="line">    ctx.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">300</span>,<span class="number">300</span>)</span><br><span class="line">    <span class="comment">//更改画图片时的起始坐标</span></span><br><span class="line">    ctx.drawImage(cherry,  <span class="number">0</span>-<span class="number">80</span>/<span class="number">2</span>, <span class="number">0</span>-<span class="number">80</span>/<span class="number">2</span>, <span class="number">80</span>, <span class="number">80</span>)</span><br><span class="line">    ctx.restore()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cherry.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    draw()</span><br><span class="line">&#125;) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width, canvas.height)</span><br><span class="line">    draw() </span><br><span class="line">    angle1+=<span class="number">1</span></span><br><span class="line">    angle2+=<span class="number">10</span></span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame(animate)</span><br><span class="line">&#125;</span><br><span class="line">animate()</span><br></pre></td></tr></table></figure><p>效果如图， 尝试去掉填充矩形</p><p><img src="/2022/07/25/JavaScript/(8)-JavaScript-Canvas%E6%97%8B%E8%BD%AC%E7%9A%84%E5%9B%BE%E7%89%87/7.gif"></p><blockquote><p>再用save() 和 restore() 函数 ，尝试使用面向对象的方法绘图</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(七) JavaScript-Canvas-滑动星座</title>
    <link href="https://zhsunbeam.github.io/2022/07/22/JavaScript/(7)-JavaScript-Canvas%E6%BB%91%E5%8A%A8%E6%98%9F%E5%BA%A7/"/>
    <id>https://zhsunbeam.github.io/2022/07/22/JavaScript/(7)-JavaScript-Canvas%E6%BB%91%E5%8A%A8%E6%98%9F%E5%BA%A7/</id>
    <published>2022-07-22T10:00:00.000Z</published>
    <updated>2022-07-24T04:14:07.171Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h3 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h3><p><img src="/2022/07/22/JavaScript/(7)-JavaScript-Canvas%E6%BB%91%E5%8A%A8%E6%98%9F%E5%BA%A7/1.gif"></p><h2 id="七-JavaScript-Canvas-滑动星座"><a href="#七-JavaScript-Canvas-滑动星座" class="headerlink" title="(七) JavaScript-Canvas-滑动星座"></a>(七) JavaScript-Canvas-滑动星座</h2><blockquote><p>在上节的基础上增加了事件处理，使用addEventListener() 函数，数组元素的添加与删除在示例中也有应用</p></blockquote><h3 id="1-设计网页代码"><a href="#1-设计网页代码" class="headerlink" title="1. 设计网页代码"></a>1. 设计网页代码</h3><ul><li>创建一个数组存储所有Circle对象</li><li>创建一个色相变量，用于每个圆的颜色设置</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript"><span class="comment">//定义一个数组，存储Circle对象        </span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> circleArray = []</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//定义色相变量，用于颜色变化</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> hue = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-Canvas事件"><a href="#2-Canvas事件" class="headerlink" title="2. Canvas事件"></a>2. Canvas事件</h3><ul><li>使用addEventListener添加一个点击(click)事件</li><li>点击时将位置信息存储在mouse对象中</li><li>点击时创建多个Circle对象，存储在数组中</li><li>还可以注册一个鼠标移动(mousemove)事件，让鼠标移动时也产生多个Circle对象</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鼠标点击时的位置记录</span></span><br><span class="line"><span class="keyword">const</span> mouse = &#123;</span><br><span class="line">    <span class="attr">x</span> : <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">y</span> : <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鼠标点击时将点击位置赋值给mouse对象,记录鼠标点击的位置</span></span><br><span class="line">canvas.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    mouse.x = e.x</span><br><span class="line">    mouse.y = e.y</span><br><span class="line"> <span class="comment">//创建10个圆存储在数组中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        circleArray.push(<span class="keyword">new</span> Circle())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">canvas.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    mouse.x = e.x</span><br><span class="line">    mouse.y = e.y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        circleArray.push(<span class="keyword">new</span> Circle())</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-定义圆类"><a href="#3-定义圆类" class="headerlink" title="3. 定义圆类"></a>3. 定义圆类</h3><ul><li>定义一个圆类，几个属性都在构造方法中初始化</li><li>圆的中心位置在点击的时候确定</li><li>圆的大小随机设置</li><li>圆的速度使用speedX 和speedY, 这两个值自己随意设置</li><li>颜色使用上面定义的hue设置，hue在动画函数中去更新</li><li>update函数用于更新当前圆对象的x和y坐标值, 判断圆的大小，如果大于0.2则不断的减小, 达成一种不断缩小的效果</li><li>draw函数用于画一个填充颜色的圆</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line">    <span class="comment">//初始化属性</span></span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = mouse.x</span><br><span class="line">        <span class="built_in">this</span>.y = mouse.y</span><br><span class="line">        <span class="comment">//随机数 定义在一个范围</span></span><br><span class="line">        <span class="built_in">this</span>.size = <span class="built_in">Math</span>.random() * <span class="number">15</span> + <span class="number">1</span></span><br><span class="line">        <span class="comment">//速度 定义在-1.5到1.5之间, 可随意设置</span></span><br><span class="line">        <span class="built_in">this</span>.speedX = <span class="built_in">Math</span>.random() * <span class="number">3</span> - <span class="number">1.5</span> </span><br><span class="line">        <span class="built_in">this</span>.speedY = <span class="built_in">Math</span>.random() * <span class="number">3</span> - <span class="number">1.5</span></span><br><span class="line">        <span class="built_in">this</span>.color =  <span class="string">&#x27;hsl(&#x27;</span>+hue+<span class="string">&#x27;,100%,50%)&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x += <span class="built_in">this</span>.speedX</span><br><span class="line">        <span class="built_in">this</span>.y += <span class="built_in">this</span>.speedY</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.size &gt; <span class="number">0.2</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.size -= <span class="number">0.1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ctx.fillStyle = <span class="built_in">this</span>.color</span><br><span class="line">        ctx.beginPath()</span><br><span class="line">        ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.size, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>)</span><br><span class="line">        ctx.fill()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-动画函数实现"><a href="#4-动画函数实现" class="headerlink" title="4. 动画函数实现"></a>4. 动画函数实现</h3><ul><li>实现方式和之前的类似</li><li>注意每次都需要调用clearRect方法</li><li>在圆不断变小时，小到一定数值时让圆消失，做法是直接从数组中删除</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>)  </span>&#123;</span><br><span class="line"></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width, canvas.height)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; circleArray.length; i++) &#123;</span><br><span class="line">        circleArray[i].update()<span class="comment">//更新</span></span><br><span class="line">        circleArray[i].draw()<span class="comment">//绘制</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = i; j &lt; circleArray.length; j++) &#123;</span><br><span class="line">            <span class="comment">//计算当前圆和其它圆之间的距离</span></span><br><span class="line">            <span class="keyword">const</span> newX = circleArray[i].x - circleArray[j].x</span><br><span class="line">            <span class="keyword">const</span> newY = circleArray[i].y - circleArray[j].y</span><br><span class="line">            <span class="keyword">const</span> distance = <span class="built_in">Math</span>.sqrt(newX*newX + newY*newY)</span><br><span class="line">            <span class="comment">//画线</span></span><br><span class="line">            <span class="keyword">if</span>(distance &lt; <span class="number">100</span>) &#123;</span><br><span class="line">                ctx.beginPath()</span><br><span class="line">                ctx.strokeStyle = circleArray[i].color</span><br><span class="line">                ctx.lineWidth = <span class="number">1</span> </span><br><span class="line">                ctx.moveTo(circleArray[i].x, circleArray[i].y)</span><br><span class="line">                ctx.lineTo(circleArray[j].x, circleArray[j].y)</span><br><span class="line">                ctx.stroke()</span><br><span class="line">                ctx.closePath()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果当前圆的尺寸较小，则从数组中删除当前Circle对象</span></span><br><span class="line">        <span class="keyword">if</span>(circleArray[i].size &lt;= <span class="number">0.3</span> ) &#123;</span><br><span class="line">            <span class="comment">//删除元素</span></span><br><span class="line">            circleArray.splice(i,<span class="number">1</span>)</span><br><span class="line">            i--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    hue+=<span class="number">0.5</span> <span class="comment">//改变色相值</span></span><br><span class="line">    requestAnimationFrame(animate)</span><br><span class="line">&#125;</span><br><span class="line">animate()</span><br></pre></td></tr></table></figure><h3 id="5-完整代码"><a href="#5-完整代码" class="headerlink" title="5. 完整代码"></a>5. 完整代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> circleArray = []</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> hue = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> mouse = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">x</span> : <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">y</span> : <span class="literal">undefined</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        canvas.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            mouse.x = e.x</span></span><br><span class="line"><span class="javascript">            mouse.y = e.y</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">                circleArray.push(<span class="keyword">new</span> Circle())</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        canvas.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            mouse.x = e.x</span></span><br><span class="line"><span class="javascript">            mouse.y = e.y</span></span><br><span class="line"><span class="javascript">  </span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">                circleArray.push(<span class="keyword">new</span> Circle())</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;) </span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//初始化属性</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = mouse.x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = mouse.y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.size = <span class="built_in">Math</span>.random() * <span class="number">15</span> + <span class="number">1</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.speedX = <span class="built_in">Math</span>.random() * <span class="number">3</span> - <span class="number">1.5</span> </span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.speedY = <span class="built_in">Math</span>.random() * <span class="number">3</span> - <span class="number">1.5</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.color =  <span class="string">&#x27;hsl(&#x27;</span>+hue+<span class="string">&#x27;,100%,50%)&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x += <span class="built_in">this</span>.speedX</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y += <span class="built_in">this</span>.speedY</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.size &gt; <span class="number">0.2</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.size -= <span class="number">0.1</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.fillStyle = <span class="built_in">this</span>.color</span></span><br><span class="line"><span class="javascript">                <span class="comment">//ctx.fillStyle = &#x27;white&#x27;</span></span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.size, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>)  </span>&#123;</span></span><br><span class="line"><span class="javascript">            ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width, canvas.height)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; circleArray.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                circleArray[i].update()</span></span><br><span class="line"><span class="javascript">                circleArray[i].draw()</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> j = i; j &lt; circleArray.length; j++) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> dx = circleArray[i].x - circleArray[j].x</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> dy = circleArray[i].y - circleArray[j].y</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> distance = <span class="built_in">Math</span>.sqrt(dx*dx + dy*dy)</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//画线</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(distance &lt; <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                        ctx.strokeStyle = circleArray[i].color</span></span><br><span class="line"><span class="javascript">                        ctx.lineWidth = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">                        ctx.moveTo(circleArray[i].x, circleArray[i].y)</span></span><br><span class="line"><span class="javascript">                        ctx.lineTo(circleArray[j].x, circleArray[j].y)</span></span><br><span class="line"><span class="javascript">                        ctx.stroke()</span></span><br><span class="line"><span class="javascript">                        ctx.closePath()</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(circleArray[i].size &lt;= <span class="number">0.3</span> ) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//删除元素</span></span></span><br><span class="line"><span class="javascript">                    circleArray.splice(i,<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">                    i--</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            hue+=<span class="number">0.5</span></span></span><br><span class="line"><span class="javascript">            requestAnimationFrame(animate)</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        animate()</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>上述代码中使用了事件，数组元素的添加和删除，学到了就能在开发中能灵活使用</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(六) JavaScript-Canvas-星座</title>
    <link href="https://zhsunbeam.github.io/2022/07/22/JavaScript/(6)-JavaScript-Canvas%E6%98%9F%E5%BA%A7/"/>
    <id>https://zhsunbeam.github.io/2022/07/22/JavaScript/(6)-JavaScript-Canvas%E6%98%9F%E5%BA%A7/</id>
    <published>2022-07-22T00:00:00.000Z</published>
    <updated>2022-07-23T01:16:50.527Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h3 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h3><p><img src="/2022/07/22/JavaScript/(6)-JavaScript-Canvas%E6%98%9F%E5%BA%A7/1.gif"></p><h2 id="六-JavaScript-Canvas-星座"><a href="#六-JavaScript-Canvas-星座" class="headerlink" title="(六) JavaScript-Canvas-星座"></a>(六) JavaScript-Canvas-星座</h2><blockquote><p>在 <a href="http://codecool.top/2022/07/21/JavaScript/(5)-JavaScript-Canvas%E7%90%83%E7%90%83%E4%B9%B1%E6%92%9E/">(五) JavaScript-Canvas球球乱撞</a>的基础上增加一些小小的特效，简单的平面几何的应用-勾股定理，两个点之间画一条线</p></blockquote><h3 id="1-上一篇-的最终代码"><a href="#1-上一篇-的最终代码" class="headerlink" title="1. 上一篇   的最终代码"></a>1. <a href="http://codecool.top/2022/07/21/JavaScript/(5)-JavaScript-Canvas%E7%90%83%E7%90%83%E4%B9%B1%E6%92%9E/">上一篇</a>   的最终代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = radius</span></span><br><span class="line"><span class="javascript">                <span class="comment">//增加一个颜色属性</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.color = <span class="string">&#x27;hsla(&#x27;</span>+(<span class="built_in">Math</span>.random()*<span class="number">360</span>)+<span class="string">&#x27;, 100%, 50%, 0.6)&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//画一个圆</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//设置填充颜色</span></span></span><br><span class="line"><span class="javascript">                ctx.fillStyle = <span class="built_in">this</span>.color</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//线样式</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//ctx.strokeStyle = &#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//ctx.stroke()</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            <span class="comment">//更新圆的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//判断圆是否超出canvas边界，判断时需要将半径也算上</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.radius &gt; canvas.width || <span class="built_in">this</span>.x-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//如果超出x轴左右两边的边界则重新设置 dx的值</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dx = -<span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//高度边界判断</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.y+<span class="built_in">this</span>.radius &gt; canvas.height || <span class="built_in">this</span>.y-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dy = -<span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//更改x和y坐标</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x += <span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y += <span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                <span class="comment">//调用draw()函数重新画圆</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.draw()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//***************************************************************</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//声明一个数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> circleArray = []</span></span><br><span class="line"><span class="javascript">        <span class="comment">//循环50次，产生50个Circle对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//自动生成x,y坐标,范围必须在Canvas画布内</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> x = <span class="built_in">Math</span>.random() * (canvas.width-radius*<span class="number">2</span>) + radius</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> y = <span class="built_in">Math</span>.random() * (canvas.height-radius*<span class="number">2</span>) + radius</span></span><br><span class="line"><span class="javascript">            <span class="comment">//速度控制, dx和dy表示移动的位置，此时也随机生成</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> dx = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">6</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> dy = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">8</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> radius = <span class="number">30</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//创建Circle对象，并添加到数组中</span></span></span><br><span class="line"><span class="javascript">            circleArray.push(<span class="keyword">new</span> Circle(x,y,dx,dy,radius))</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//****************************************************************</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//**********************动画函数**********************</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            requestAnimationFrame(animate)</span></span><br><span class="line"><span class="javascript">            ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; circleArray.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                circleArray[i].update()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//**********************动画函数**********************</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//别忘记调用</span></span></span><br><span class="line"><span class="javascript">        animate()</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-增加新的功能"><a href="#2-增加新的功能" class="headerlink" title="2. 增加新的功能"></a>2. 增加新的功能</h3><ul><li><p>球和球之间画一条线，要实现此功能需要用到毕达哥拉斯定理，也就是勾股定理。</p></li><li><p>在遍历数组的时候，将当前球的位置和其它所有球的位置进行距离计算，如果距离小于一定值，则画一条线</p></li><li><p>计算过程如下图所示</p></li><li><p>关键代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两点之间的距离计算</span></span><br><span class="line"><span class="comment">//计算两个Circle 对象的 x 坐标之差</span></span><br><span class="line"><span class="keyword">const</span> newX = circleArray[i].x - circleArray[j].x</span><br><span class="line"><span class="comment">//计算两个Circle 对象的 y 坐标之差</span></span><br><span class="line"><span class="keyword">const</span> newY = circleArray[i].y - circleArray[j].y</span><br><span class="line"><span class="comment">//使用毕达哥拉斯定理，已知两边求第三边</span></span><br><span class="line"><span class="keyword">let</span> distance = <span class="built_in">Math</span>.sqrt(newX*newX + newY*newY)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    requestAnimationFrame(animate)</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; circleArray.length; i++) &#123;</span><br><span class="line">        <span class="comment">//画图函数的调用放于此处</span></span><br><span class="line">        circleArray[i].draw()</span><br><span class="line">        <span class="comment">//更新</span></span><br><span class="line">        circleArray[i].update()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//**************************增加的代码***************************************</span></span><br><span class="line">        <span class="comment">//遍历当前Circle对象之外的所有Circle，计算当前Circle对象和其它每个Circle之间的距离，使用毕达哥拉斯定理(勾股定理)</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = i+<span class="number">1</span>; j &lt; circleArray.length; j++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//两点之间的距离计算</span></span><br><span class="line">            <span class="comment">//计算两个Circle 对象的 x 坐标之差</span></span><br><span class="line">            <span class="keyword">const</span> newX = circleArray[i].x - circleArray[j].x</span><br><span class="line">            <span class="comment">//计算两个Circle 对象的 y 坐标之差</span></span><br><span class="line">            <span class="keyword">const</span> newY = circleArray[i].y - circleArray[j].y</span><br><span class="line"><span class="comment">//使用毕达哥拉斯定理，已知两边求第三边</span></span><br><span class="line">            <span class="keyword">let</span> distance = <span class="built_in">Math</span>.sqrt(newX*newX + newY*newY)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//当粒子和粒子之间的距离小于100时画线</span></span><br><span class="line">            <span class="keyword">if</span>(distance &lt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="comment">//路径开始</span></span><br><span class="line">                ctx.beginPath()</span><br><span class="line">                <span class="comment">//颜色设定为当前对象的color</span></span><br><span class="line">                ctx.strokeStyle = circleArray[i].color</span><br><span class="line">                <span class="comment">//线宽设置</span></span><br><span class="line">                ctx.lineWidth = <span class="number">1</span></span><br><span class="line">                <span class="comment">//两个点 连成一根线</span></span><br><span class="line">                ctx.moveTo(circleArray[i].x, circleArray[i].y)</span><br><span class="line">                ctx.lineTo(circleArray[j].x, circleArray[j].y)</span><br><span class="line">                ctx.stroke()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//****************************************************************************</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>计算过程如下图所示:</p><p><img src="/2022/07/22/JavaScript/(6)-JavaScript-Canvas%E6%98%9F%E5%BA%A7/2.png"></p><h3 id="3-完整代码"><a href="#3-完整代码" class="headerlink" title="3. 完整代码"></a>3. 完整代码</h3><ul><li>稍做改动，球的半径不再固定，改成随机生成</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">              </span></span><br><span class="line"><span class="javascript">                <span class="comment">//球的半径随机设置</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = <span class="built_in">Math</span>.random() * <span class="number">15</span> + <span class="number">1</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">//增加一个颜色属性</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.color = <span class="string">&#x27;hsla(&#x27;</span>+(<span class="built_in">Math</span>.random()*<span class="number">360</span>)+<span class="string">&#x27;, 100%, 50%, 0.6)&#x27;</span></span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//画一个圆</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//设置填充颜色</span></span></span><br><span class="line"><span class="javascript">                ctx.fillStyle = <span class="built_in">this</span>.color</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//线样式</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//ctx.strokeStyle = &#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//ctx.stroke()</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            <span class="comment">//更新圆的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//判断圆是否超出canvas边界，判断时需要将半径也算上</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.radius &gt; canvas.width || <span class="built_in">this</span>.x-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//如果超出x轴左右两边的边界则重新设置 dx的值</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dx = -<span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//高度边界判断</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.y+<span class="built_in">this</span>.radius &gt; canvas.height || <span class="built_in">this</span>.y-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dy = -<span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//更改x和y坐标</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x += <span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y += <span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//***************************************************************</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//声明一个数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> circleArray = []</span></span><br><span class="line"><span class="javascript">        <span class="comment">//循环50次，产生50个Circle对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//自动生成x,y坐标,范围必须在Canvas画布内</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> x = <span class="built_in">Math</span>.random() * (canvas.width-radius*<span class="number">2</span>) + radius</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> y = <span class="built_in">Math</span>.random() * (canvas.height-radius*<span class="number">2</span>) + radius</span></span><br><span class="line"><span class="javascript">            <span class="comment">//速度控制, dx和dy表示移动的位置，此时也随机生成</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> dx = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">6</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> dy = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">8</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> radius = <span class="number">30</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//创建Circle对象，并添加到数组中</span></span></span><br><span class="line"><span class="javascript">            circleArray.push(<span class="keyword">new</span> Circle(x,y,dx,dy,radius))</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//****************************************************************</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//**********************动画函数**********************</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            requestAnimationFrame(animate)</span></span><br><span class="line"><span class="javascript">            ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; circleArray.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//画图函数的调用放于此处</span></span></span><br><span class="line"><span class="javascript">                circleArray[i].draw()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//更新</span></span></span><br><span class="line"><span class="javascript">                circleArray[i].update()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">//**************************增加的代码***************************************</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//遍历当前Circle对象之外的所有Circle，计算当前Circle对象和其它每个Circle之间的距离，使用毕达哥拉斯定理(勾股定理)</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> j = i+<span class="number">1</span>; j &lt; circleArray.length; j++) &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//两点之间的距离计算</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//计算两个Circle 对象的 x 坐标之差</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> newX = circleArray[i].x - circleArray[j].x</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//计算两个Circle 对象的 y 坐标之差</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> newY = circleArray[i].y - circleArray[j].y</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//使用毕达哥拉斯定理，已知两边</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> distance = <span class="built_in">Math</span>.sqrt(newX*newX + newY*newY)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//当粒子和粒子之间的距离小于100时画线</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(distance &lt; <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//路径开始</span></span></span><br><span class="line"><span class="javascript">                        ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//颜色设定为当前对象的color</span></span></span><br><span class="line"><span class="javascript">                        ctx.strokeStyle = circleArray[i].color</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//线宽设置</span></span></span><br><span class="line"><span class="javascript">                        ctx.lineWidth = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//两个点 连成一根线</span></span></span><br><span class="line"><span class="javascript">                        ctx.moveTo(circleArray[i].x, circleArray[i].y)</span></span><br><span class="line"><span class="javascript">                        ctx.lineTo(circleArray[j].x, circleArray[j].y)</span></span><br><span class="line"><span class="javascript">                        ctx.stroke()</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//****************************************************************************</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//**********************动画函数**********************</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//别忘记调用</span></span></span><br><span class="line"><span class="javascript">        animate()</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>本节内容主要是平面几何中的原理应用到实际图形开发中，是不是很有趣?  在这个基础之上还可以做出更多的效果。</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(五) JavaScript-Canvas球球乱撞</title>
    <link href="https://zhsunbeam.github.io/2022/07/21/JavaScript/(5)-JavaScript-Canvas%E7%90%83%E7%90%83%E4%B9%B1%E6%92%9E/"/>
    <id>https://zhsunbeam.github.io/2022/07/21/JavaScript/(5)-JavaScript-Canvas%E7%90%83%E7%90%83%E4%B9%B1%E6%92%9E/</id>
    <published>2022-07-21T09:00:00.000Z</published>
    <updated>2022-07-22T09:53:37.080Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/2022/07/21/JavaScript/(5)-JavaScript-Canvas%E7%90%83%E7%90%83%E4%B9%B1%E6%92%9E/1.gif"></p><h2 id="五-JavaScript-Canvas球球乱撞"><a href="#五-JavaScript-Canvas球球乱撞" class="headerlink" title="(五) JavaScript-Canvas球球乱撞"></a>(五) JavaScript-Canvas球球乱撞</h2><blockquote><p>在 <a href="http://codecool.top/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/">JavaScript-Canvas-自由运动的球</a> 这一节里，实现了单个球自由地在Canvas画布中运动，本节将它完善一下，创建N个球在Canvas画布中胡乱飞，见上图；这些球相互之间不会碰撞，如果需要实现这个功能，还需加点油，跟着来就对了。</p></blockquote><ul><li><p>本节JavaScript 技术要点</p><ul><li><p>定义数组 和使用数组, 貌似一见到数组有些人就犯难了</p></li><li><p>随机设置颜色</p></li><li><p>控制一下球的运动速度(其实这算不上技术，顶多是个技巧)</p></li></ul></li></ul><h3 id="1-JavaScript-Canvas-自由运动的球-最终代码如下"><a href="#1-JavaScript-Canvas-自由运动的球-最终代码如下" class="headerlink" title="1. JavaScript-Canvas-自由运动的球 最终代码如下"></a>1. <a href="http://codecool.top/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/">JavaScript-Canvas-自由运动的球</a> 最终代码如下</h3><ul><li>需要在这个代码上面增加一点内容来实现 多球自由运动</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = radius</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//画一个圆</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//线样式</span></span></span><br><span class="line"><span class="javascript">                ctx.strokeStyle = <span class="string">&#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">                ctx.stroke()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            <span class="comment">//更新圆的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//判断圆是否超出canvas边界，判断时需要将半径也算上</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.radius &gt; canvas.width || <span class="built_in">this</span>.x-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//如果超出x轴左右两边的边界则重新设置 dx的值</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dx = -<span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//高度边界判断</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.y+<span class="built_in">this</span>.radius &gt; canvas.height || <span class="built_in">this</span>.y-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dy = -<span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//更改x和y坐标</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x += <span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y += <span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                <span class="comment">//调用draw()函数重新画圆</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.draw()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//创建一个圆</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> circle = <span class="keyword">new</span> Circle(<span class="number">200</span>,<span class="number">200</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">30</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">//调用update函数</span></span></span><br><span class="line"><span class="javascript">        circle.update()</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//动画函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//不断请求动画帧，每次请求都会重新调用一次animate,</span></span></span><br><span class="line"><span class="javascript">            requestAnimationFrame(animate)</span></span><br><span class="line"><span class="javascript">            ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height)</span></span><br><span class="line"><span class="javascript">            circle.update()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        animate()</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-Circle数组"><a href="#2-Circle数组" class="headerlink" title="2. Circle数组"></a>2. Circle数组</h3><ul><li>既然要有多个球，那么可以定义一个数组，数组中的元素为Circle对象, 每个圆的初始位置都随机生成</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明一个数组</span></span><br><span class="line"><span class="keyword">var</span> circleArray = []</span><br><span class="line"><span class="comment">//循环50次，产生50个Circle对象</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//自动生成x,y坐标,范围必须在Canvas画布内</span></span><br><span class="line">    <span class="keyword">let</span> x = <span class="built_in">Math</span>.random() * (canvas.width-radius*<span class="number">2</span>) + radius</span><br><span class="line">    <span class="keyword">let</span> y = <span class="built_in">Math</span>.random() * (canvas.height-radius*<span class="number">2</span>) + radius</span><br><span class="line">    <span class="comment">//速度控制, dx和dy表示移动的位置，此时也随机生成</span></span><br><span class="line">    <span class="keyword">let</span> dx = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">6</span></span><br><span class="line">    <span class="keyword">let</span> dy = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">8</span></span><br><span class="line">    <span class="keyword">let</span> radius = <span class="number">30</span></span><br><span class="line">    <span class="comment">//创建Circle对象，并添加到数组中</span></span><br><span class="line">    circleArray.push(<span class="keyword">new</span> Circle(x,y,dx,dy,radius))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-动画函数中遍历数组"><a href="#3-动画函数中遍历数组" class="headerlink" title="3. 动画函数中遍历数组"></a>3. 动画函数中遍历数组</h3><ul><li>遍历数组时不断的调用 Circle对象的update()方法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    requestAnimationFrame(animate)</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; circleArray.length; i++) &#123;</span><br><span class="line">        circleArray[i].update()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">animate()</span><br></pre></td></tr></table></figure><h3 id="4-完整代码"><a href="#4-完整代码" class="headerlink" title="4. 完整代码"></a>4. 完整代码</h3><ul><li>增加了随机颜色</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = radius</span></span><br><span class="line"><span class="javascript">                <span class="comment">//增加一个颜色属性</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.color = <span class="string">&#x27;hsla(&#x27;</span>+(<span class="built_in">Math</span>.random()*<span class="number">360</span>)+<span class="string">&#x27;, 100%, 50%, 0.6)&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//画一个圆</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//设置填充颜色</span></span></span><br><span class="line"><span class="javascript">                ctx.fillStyle = <span class="built_in">this</span>.color</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//线样式</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//ctx.strokeStyle = &#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//ctx.stroke()</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            <span class="comment">//更新圆的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//判断圆是否超出canvas边界，判断时需要将半径也算上</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.radius &gt; canvas.width || <span class="built_in">this</span>.x-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//如果超出x轴左右两边的边界则重新设置 dx的值</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dx = -<span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//高度边界判断</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.y+<span class="built_in">this</span>.radius &gt; canvas.height || <span class="built_in">this</span>.y-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dy = -<span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//更改x和y坐标</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x += <span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y += <span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                <span class="comment">//调用draw()函数重新画圆</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.draw()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//***************************************************************</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//声明一个数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> circleArray = []</span></span><br><span class="line"><span class="javascript">        <span class="comment">//循环50次，产生50个Circle对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//自动生成x,y坐标,范围必须在Canvas画布内</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> x = <span class="built_in">Math</span>.random() * (canvas.width-radius*<span class="number">2</span>) + radius</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> y = <span class="built_in">Math</span>.random() * (canvas.height-radius*<span class="number">2</span>) + radius</span></span><br><span class="line"><span class="javascript">            <span class="comment">//速度控制, dx和dy表示移动的位置，此时也随机生成</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> dx = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">6</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> dy = (<span class="built_in">Math</span>.random() - <span class="number">0.5</span>) * <span class="number">8</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> radius = <span class="number">30</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//创建Circle对象，并添加到数组中</span></span></span><br><span class="line"><span class="javascript">            circleArray.push(<span class="keyword">new</span> Circle(x,y,dx,dy,radius))</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//****************************************************************</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//**********************动画函数**********************</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            requestAnimationFrame(animate)</span></span><br><span class="line"><span class="javascript">            ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; circleArray.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                circleArray[i].update()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//**********************动画函数**********************</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//别忘记调用</span></span></span><br><span class="line"><span class="javascript">        animate()</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>本节中利用数组存储了多个Circle对象，在动画函数中遍历数组并调用update方法更新 Circle的位置， 后续我们增加特效，让球和球之间有连线</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(四) JavaScript-Canvas-自由运动的球</title>
    <link href="https://zhsunbeam.github.io/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/"/>
    <id>https://zhsunbeam.github.io/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/</id>
    <published>2022-07-21T07:00:00.000Z</published>
    <updated>2022-07-23T00:33:56.503Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/1.gif"></p><h2 id="四-JavaScript-Canvas-自由运动的球"><a href="#四-JavaScript-Canvas-自由运动的球" class="headerlink" title="(四)  JavaScript-Canvas-自由运动的球"></a>(四)  JavaScript-Canvas-自由运动的球</h2><blockquote><p>本节将使用window.requestAnimationFrame()函数制作动画，先从简单的开始, 理解以下内容需要对JavaScript 中的函数和class有基本的了解</p></blockquote><ul><li><p>本节JavaScript 技术要点</p><ul><li>使用class定义类</li><li>使用constructor定义构造函数</li><li>使用Canvas Context的 arc函数绘制圆</li><li>动画关键函数 window.requestAnimationFrame()</li></ul></li></ul><h3 id="1-准备HTML页面"><a href="#1-准备HTML页面" class="headerlink" title="1. 准备HTML页面"></a>1. 准备HTML页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建一个圆类"><a href="#2-创建一个圆类" class="headerlink" title="2. 创建一个圆类"></a>2. 创建一个圆类</h3><ul><li><p>使用ES6中的class关键字 定义一个圆（也可以直接使用function），一个圆需要中心坐标以及半径参数，在本例中还需要移动的距离</p><ul><li><p>使用class定义圆，x,y表示圆的中心坐标，dx,dy表示移动时的横坐标和纵坐标距离 , radius表示半径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x</span><br><span class="line">        <span class="built_in">this</span>.y = y</span><br><span class="line">        <span class="built_in">this</span>.dx = dx</span><br><span class="line">        <span class="built_in">this</span>.dy = dy</span><br><span class="line">        <span class="built_in">this</span>.radius = radius</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用function定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Circle</span>(<span class="params">x, y, dx, dy, radius</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.x = x</span><br><span class="line">    <span class="built_in">this</span>.y = y</span><br><span class="line">    <span class="built_in">this</span>.dx = dx</span><br><span class="line">    <span class="built_in">this</span>.dy = dy</span><br><span class="line">    <span class="built_in">this</span>.radius = radius</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = radius</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-定义绘制圆的函数，在Circle类中定义"><a href="#3-定义绘制圆的函数，在Circle类中定义" class="headerlink" title="3. 定义绘制圆的函数，在Circle类中定义"></a>3. 定义绘制圆的函数，在Circle类中定义</h3><ul><li>绘制开始 beginPath()</li><li><strong>绘制圆的arc函数 ctx.arc(this.x, this.y, this.radius, 0,  2*Math.PI,   false)</strong> <ul><li>this.x,this.y是指当前对象的坐标</li><li>this.radius是指当前对象的半径</li><li>0 表示开始角度</li><li>2*Math.PI 表示360度</li><li>最后个参数表示是否是逆时针方向绘制,设置为true或false均可</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = radius</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//线样式</span></span></span><br><span class="line"><span class="javascript">                ctx.strokeStyle = <span class="string">&#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">                ctx.stroke()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-圆位置变化"><a href="#4-圆位置变化" class="headerlink" title="4. 圆位置变化"></a>4. 圆位置变化</h3><ul><li>圆在Canvas中位置要不断的变化才能有动画效果，所以x和y坐标不是固定的，而是动态变化的，可以定义一个数不断的更新圆的x,y的值</li><li>圆的位置不能超过Canvas的宽度和高度, 判断时需要将半径也算上</li><li>增加的函数命名为update</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = radius</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//画一个圆</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//线样式</span></span></span><br><span class="line"><span class="javascript">                ctx.strokeStyle = <span class="string">&#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">                ctx.stroke()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            <span class="comment">//更新圆的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//判断圆是否超出canvas边界，判断时需要将半径也算上</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.radius &gt; canvas.width || <span class="built_in">this</span>.x-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//如果超出x轴左右两边的边界则重新设置 dx的值</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dx = -<span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//高度边界判断</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.y+<span class="built_in">this</span>.radius &gt; canvas.height || <span class="built_in">this</span>.y-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dy = -<span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//更改x和y坐标</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x += <span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y += <span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                <span class="comment">//调用draw()函数重新画圆</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.draw()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//创建一个圆</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> circle = <span class="keyword">new</span> Circle(<span class="number">200</span>,<span class="number">200</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">30</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">//调用update函数</span></span></span><br><span class="line"><span class="javascript">        circle.update()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如图，圆不会动，原因是update函数需要不断调用，此时只调用了一次</p><p><img src="/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/2.png"></p><h3 id="5-动画"><a href="#5-动画" class="headerlink" title="5. 动画"></a>5. 动画</h3><ul><li>使用动画函数不断自动调用update</li><li>每次刷新update调用时都需要clear一下整个画布，试试不去调用clearRect的效果会怎样</li><li>关于动画帧函数，参考 <a href="http://codecool.top/2022/07/17/JavaScript/animationframe/">window.requestAnimationFrame() </a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span>  &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">constructor</span>(<span class="params">x, y, dx, dy, radius</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x = x</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y = y</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dx = dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.dy = dy</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.radius = radius</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//画一个圆</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                ctx.beginPath()</span></span><br><span class="line"><span class="javascript">                ctx.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">                <span class="comment">//线样式</span></span></span><br><span class="line"><span class="javascript">                ctx.strokeStyle = <span class="string">&#x27;blue&#x27;</span></span></span><br><span class="line"><span class="javascript">                ctx.stroke()</span></span><br><span class="line"><span class="javascript">                <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                ctx.fill()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            <span class="comment">//更新圆的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//判断圆是否超出canvas边界，判断时需要将半径也算上</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.x + <span class="built_in">this</span>.radius &gt; canvas.width || <span class="built_in">this</span>.x-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//如果超出x轴左右两边的边界则重新设置 dx的值</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dx = -<span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//高度边界判断</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.y+<span class="built_in">this</span>.radius &gt; canvas.height || <span class="built_in">this</span>.y-<span class="built_in">this</span>.radius &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.dy = -<span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//更改x和y坐标</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.x += <span class="built_in">this</span>.dx</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.y += <span class="built_in">this</span>.dy</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">                <span class="comment">//调用draw()函数重新画圆</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.draw()</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//创建一个圆</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> circle = <span class="keyword">new</span> Circle(<span class="number">200</span>,<span class="number">200</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">30</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">//调用update函数</span></span></span><br><span class="line"><span class="javascript">        circle.update()</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//动画函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//不断请求动画帧，每次请求都会重新调用一次animate,</span></span></span><br><span class="line"><span class="javascript">            requestAnimationFrame(animate)</span></span><br><span class="line"><span class="javascript">            ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height)</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">            circle.update()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        animate()</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如此文开头的动图，如果注释掉ctx.clearRect(0,0,canvas.width,canvas.height) 你将得到以下结果</p><p><img src="/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/3.gif"></p><p>加上数组，再加上随机颜色的变化，就可以产生下图的效果了</p><p><img src="/2022/07/21/JavaScript/(4)-JavaScript-Canvas%E8%87%AA%E7%94%B1%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%83/4.gif"></p><blockquote><p>动画相对静态的图形稍麻烦一点，但若是掌握了requestAnimationFrame以及背后的原理，实现动画就简单多了，当然，也可以使用setTimeout或setInterval，大伙可以试试</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(三)  JavaScript Canvas 画多边形-多角星</title>
    <link href="https://zhsunbeam.github.io/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/"/>
    <id>https://zhsunbeam.github.io/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/</id>
    <published>2022-07-21T02:02:00.000Z</published>
    <updated>2022-07-22T04:29:06.941Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h2 id="二-JavaScript-Canvas-画多边形-多角星"><a href="#二-JavaScript-Canvas-画多边形-多角星" class="headerlink" title="(二)  JavaScript Canvas 画多边形-多角星"></a>(二)  JavaScript Canvas 画多边形-多角星</h2><h3 id="1-准备HTML页面"><a href="#1-准备HTML页面" class="headerlink" title="1. 准备HTML页面"></a>1. 准备HTML页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        * &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas1</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas1.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(canvas1)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(ctx);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//定义画布Canvas的宽和高</span></span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-绘制六角星形"><a href="#2-绘制六角星形" class="headerlink" title="2. 绘制六角星形"></a>2. 绘制六角星形</h3><ul><li>多边形由线组成，先把第一根线画好，此处选择从中心点向上绘制</li><li>初始坐标为(0,0) 此时设置为画布Canvas的中心点</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义画布Canvas的宽和高</span></span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到canvas中心点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"><span class="comment">//设置颜色为红色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle=<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置线宽</span></span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">3</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//移动到坐标(0,0)</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//结束坐标</span></span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//画线</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下图所示</p><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/1.png"></p><ul><li>下面再画第二根线，要注意的是不要closePath()，让第二根线从第一根线的结束点开始画，也就是从(0, -100)开始</li><li>绘制时需要旋转, 旋转会将整个坐标系旋转具体角度或弧度</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义画布Canvas的宽和高</span></span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到canvas中心点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"><span class="comment">//设置颜色为红色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle=<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置线宽</span></span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">3</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//移动到坐标(0,0)</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//结束坐标</span></span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制第二根线</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画线</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如下图所示，第二根线的开始点为(0, -100) 结束点为 (0, -50),  整个坐标系rotate (旋转) 了 Math.PI/6 个角度 </p><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/3.png"></p><p>rotate 前和rotate 后的坐标系如图所示，蓝色表示是rotate 前, 红色表示rotate后</p><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/2.png"></p><ul><li>接下来再用同样的方法，先rotate,然后再设定结束坐标</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义画布Canvas的宽和高</span></span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到canvas中心点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"><span class="comment">//设置颜色为红色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle=<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置线宽</span></span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">3</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//移动到坐标(0,0)</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//结束坐标</span></span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制第二根线</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制第三根线</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画线</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下图所示</p><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/4.png"></p><ul><li>接下来就只需要重复以上第二根线和第三根线的绘制步骤</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义画布Canvas的宽和高</span></span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到canvas中心点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"><span class="comment">//设置颜色为红色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle=<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置线宽</span></span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">3</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//移动到坐标(0,0)</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//结束坐标</span></span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制第二根线</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制第三根线</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//重复以上两根线的绘制</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画线</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果如下图所示, 六边形就画成了，但是多了一根线，可以直接将这行代码<strong>ctx.moveTo(0, 0)</strong> 注释掉即可</p><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/5.png"></p><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/6.png"></p><h3 id="3-使用循环实现"><a href="#3-使用循环实现" class="headerlink" title="3. 使用循环实现"></a>3. 使用循环实现</h3><ul><li>上面代码可以使用循环实现</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义画布Canvas的宽和高</span></span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到canvas中心点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"><span class="comment">//设置颜色为红色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle=<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置线宽</span></span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">3</span></span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++) &#123;</span></span><br><span class="line"><span class="javascript">        ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">        ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span></span><br><span class="line"><span class="javascript">        ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">6</span>)</span></span><br><span class="line"><span class="javascript">        ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//画线</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果和上面一样，还可以改成7角星或更多角,只需要改一个数字即可</p><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/6.png"></p><p>将6更改为10</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">10</span>)</span><br><span class="line">    ctx.lineTo(<span class="number">0</span>, -<span class="number">50</span>)</span><br><span class="line">    ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">10</span>)</span><br><span class="line">    ctx.lineTo(<span class="number">0</span>, -<span class="number">100</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/7.png"></p><h3 id="4-定义函数绘制多边形或多角星"><a href="#4-定义函数绘制多边形或多角星" class="headerlink" title="4. 定义函数绘制多边形或多角星"></a>4. 定义函数绘制多边形或多角星</h3><ul><li>定义成函数后，更改几个参数就可以绘制出不同的形状</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        * &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript"> </span></span><br><span class="line"><span class="javascript">        <span class="comment">//定义画布Canvas的宽和高</span></span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript"> <span class="comment">//x,y也可以为任意值,此处是将其平移动中心位置</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> x = canvas.width/<span class="number">2</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> y = canvas.height/<span class="number">2</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//绘制一个八角形,第四个参数如果是等于1时将会是一个多边形</span></span></span><br><span class="line"><span class="javascript">        drawShape(x, y, <span class="number">50</span>, <span class="number">1.5</span>, <span class="number">8</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">drawShape</span>(<span class="params">x, y, radius, inset, n</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            ctx.fillStyle = <span class="string">&#x27;hsl(3,100%,50%)&#x27;</span></span></span><br><span class="line"><span class="javascript">            ctx.beginPath()</span></span><br><span class="line"><span class="javascript">            ctx.save()</span></span><br><span class="line"><span class="javascript">            ctx.translate(x,y) <span class="comment">//平移到x,y的位置</span></span></span><br><span class="line"><span class="javascript">            ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>-radius) <span class="comment">//开始点  如果radius为100此时的坐标就为 (0,-100)</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span></span><br><span class="line"><span class="javascript">                ctx.rotate(<span class="built_in">Math</span>.PI/n)<span class="comment">//旋转</span></span></span><br><span class="line"><span class="javascript">                ctx.lineTo(<span class="number">0</span>, <span class="number">0</span>-radius*inset) <span class="comment">//中心点和内角点的距离</span></span></span><br><span class="line"><span class="javascript">                ctx.rotate(<span class="built_in">Math</span>.PI/n)</span></span><br><span class="line"><span class="javascript">                ctx.lineTo(<span class="number">0</span>, <span class="number">0</span>-radius) <span class="comment">//中心点和外角点的距离</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            ctx.restore()</span></span><br><span class="line"><span class="javascript">            ctx.closePath()</span></span><br><span class="line"><span class="javascript">            ctx.stroke()</span></span><br><span class="line"><span class="javascript">            ctx.fill()<span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>  调用时可传递不同的参数值，看看效果吧</li><li>drawShape(x, y, 50, 1.5, 8)</li></ul><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/8.png"></p><ul><li>drawShape(x, y, 50, 1.5, 8)</li></ul><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/9.png"></p><ul><li>drawShape(x, y, 100, 2.8, 5)</li></ul><p><img src="/2022/07/21/JavaScript/(3)-JavaScript-Canvas%E7%94%BB%E5%A4%9A%E8%BE%B9%E5%BD%A2/10.png"></p><blockquote><p>以上均为绘图基础，为后续绘制复杂的图形和动画打好基础. 最后一个函数稍微复杂一点点。用到的技术也就是前面篇章里介绍的。</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(七) JavaScript-Canvas-滑动星座</title>
    <link href="https://zhsunbeam.github.io/2022/07/21/Spring/00-Spring-core/"/>
    <id>https://zhsunbeam.github.io/2022/07/21/Spring/00-Spring-core/</id>
    <published>2022-07-21T00:00:00.000Z</published>
    <updated>2022-07-24T04:58:42.804Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有人选择了一个培训机构，竟然说那个机构”体系比较好”, 实在不明白这种脑回路，不过的确有这样的人，还不少。学技术说白了你就是消费者，消费者看得就是性价比，如果能自学，有强大的自我管理能力，B站就是你的老师；如果希望选择一个老师带，但又顾及成本，希望面授，不缺钱，那就线下；无论哪种方式，如果基础自己能搞定，你需要的便是项目经验；  说起框架，的确有很多人把它当万能的神，不得不承认，框架的确提高了生产率</p></blockquote>]]></content>
    
    
    <summary type="html">Java框架,Spring</summary>
    
    
    
    <category term="Spring" scheme="https://zhsunbeam.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://zhsunbeam.github.io/tags/Spring/"/>
    
    <category term="框架" scheme="https://zhsunbeam.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>(二)  JavaScript Canvas 画矩形</title>
    <link href="https://zhsunbeam.github.io/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/"/>
    <id>https://zhsunbeam.github.io/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/</id>
    <published>2022-07-20T04:02:00.000Z</published>
    <updated>2022-07-21T12:04:14.161Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h2 id="二-JavaScript-Canvas-画矩形"><a href="#二-JavaScript-Canvas-画矩形" class="headerlink" title="(二)  JavaScript Canvas 画矩形"></a>(二)  JavaScript Canvas 画矩形</h2><h3 id="1-准备HTML页面"><a href="#1-准备HTML页面" class="headerlink" title="1. 准备HTML页面"></a>1. 准备HTML页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">120deg</span>, <span class="number">#4a3934</span>, <span class="number">#e6d5b9</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-画矩形"><a href="#2-画矩形" class="headerlink" title="2. 画矩形"></a>2. 画矩形</h3><ul><li>掌握几个函数 <ul><li>translate() 平移坐标原点到指定坐标位置</li><li>moveTo(0, 0) 移动到坐标位置(0, 0)</li><li>beginPath() 开始路径</li><li>closePath() 关闭路径</li><li>rotate() 旋转</li><li>save()</li></ul></li><li>在中心点画一个矩形<ul><li>使用平移函数 translate()  和  绘制矩形函数rect()</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移</span></span></span><br><span class="line"><span class="javascript">ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//将坐标设定为(0,0) 也就是平移后的中心</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;black&#x27;</span> </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画矩形 坐标和长宽</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下图:</p><p> <img src="/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/1.png"></p><ul><li>在上一个矩形之后再画一个矩形,改变一下颜色和旋转的角度</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移</span></span></span><br><span class="line"><span class="javascript">ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//将坐标设定为(0,0) 也就是平移后的中心</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;black&#x27;</span> </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画矩形 坐标和长宽</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//一个新的矩形</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//旋转一定角度</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制矩形</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看看效果, 你会发现，两个矩形边框的颜色是最后一次设定的红色, 怎么解决? 其实和画线那篇类似，使用beginPath()</p><p><img src="/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/2.png"></p><ul><li>使用beginPath() 重新开始</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移</span></span></span><br><span class="line"><span class="javascript">ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//将坐标设定为(0,0) 也就是平移后的中心</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;black&#x27;</span> </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画矩形 坐标和长宽</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//一个新的矩形</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath() <span class="comment">//重新开始新的设置，原来的设置（比如颜色）将不会影响后续图形</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//旋转一定角度</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制矩形</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//此行可以写也可以省略</span></span></span><br><span class="line"><span class="javascript">    ctx.closePath()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如下图所示</p><p><img src="/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/3.png"></p><ul><li>再画第三个矩形，同时的旋转角度, 边框颜色设定为 blue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移</span></span></span><br><span class="line"><span class="javascript">ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//将坐标设定为(0,0) 也就是平移后的中心</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;black&#x27;</span> </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画矩形 坐标和长宽</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//一个新的矩形</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath() <span class="comment">//重新开始新的设置，原来的设置（比如颜色）将不会影响后续图形</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//旋转一定角度</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制矩形</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//此行可以写也可以省略</span></span></span><br><span class="line"><span class="javascript">    ctx.closePath()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;blue&#x27;</span> </span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    ctx.closePath()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，旋转的角度是相对于上一个矩形，如果不使用save() restore()方法，那么旋转时将相对于上次绘制的形状</p><p><img src="/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/4.png"></p><ul><li>在绘制中间的那个矩形时使用save() 和 restore()包裹起来，看看有什么不一样</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移</span></span></span><br><span class="line"><span class="javascript">ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//将坐标设定为(0,0) 也就是平移后的中心</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;black&#x27;</span> </span></span><br><span class="line"><span class="javascript">    <span class="comment">//画矩形 坐标和长宽</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//一个新的矩形</span></span></span><br><span class="line"><span class="javascript">    ctx.save()</span></span><br><span class="line"><span class="javascript">    ctx.beginPath() <span class="comment">//重新开始新的设置，原来的设置（比如颜色）将不会影响后续图形</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//旋转一定角度</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定颜色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//绘制矩形</span></span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//此行可以写也可以省略</span></span></span><br><span class="line"><span class="javascript">    ctx.closePath()</span></span><br><span class="line"><span class="javascript">    ctx.restore()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span> * <span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&#x27;blue&#x27;</span> </span></span><br><span class="line"><span class="javascript">    ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    ctx.closePath()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>绘制结果如下，第二个矩形和第三个矩形重合了，可以这样理解，第三个矩形认为第二个矩形不存在一样，绘制时旋转角度就依赖于第一个矩形</p><p><img src="/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/5.png"></p><ul><li>通过循环绘制矩形</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    drawRect()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">drawRect</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//平移</span></span></span><br><span class="line"><span class="javascript">        ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">//将坐标设定为(0,0) 也就是平移后的中心</span></span></span><br><span class="line"><span class="javascript">        ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">        ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">        ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++) &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            ctx.strokeStyle =  <span class="string">&#x27;hsl(&#x27;</span> + <span class="built_in">Math</span>.random()*<span class="number">360</span> + <span class="string">&quot;,100%,50%)&quot;</span></span></span><br><span class="line"><span class="javascript">            ctx.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">200</span>)</span></span><br><span class="line"><span class="javascript">            ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">            ctx.stroke()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如图，注意没有增加save()和restore()方法</p><p><img src="/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/6.png"></p><blockquote><p>save()和restore()经常在矩阵变换 translate()、缩放 scale()、旋转rotate()中使用, 因为一个Canvas只有一个2d上下文，当执行转换操作时，整个上下文的坐标系都将改变。改变后，如果我们需要将坐标系恢复到原来正常的状态，这时就需要用到save() 和 restore(), 下图中第一次绘制矩形的坐标系和旋转后绘制矩形的坐标系</p></blockquote><p><img src="/2022/07/20/JavaScript/(2)-JavaScript-Canvas%E7%94%BB%E7%9F%A9%E5%BD%A2/7.png"></p><blockquote><p>以上均为绘图基础，为后续绘制复杂的图形和动画打好基础</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>(一)  JavaScript Canvas 画线</title>
    <link href="https://zhsunbeam.github.io/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/"/>
    <id>https://zhsunbeam.github.io/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/</id>
    <published>2022-07-19T13:02:13.000Z</published>
    <updated>2022-07-21T04:12:04.361Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> JavaScript 是前端核心， 掌握这门语言是步入前端高手行列必经之路，噢，别忘了还有TypeScript, 学习它还需要OOP知识， 底层的浏览器原理、HTTP协议也必不可少， 此系列文章记录使用JavaScript和Canvas进行游戏开发, 有游戏才有趣!!!</p></blockquote><h2 id="一-JavaScript-Canvas-画线"><a href="#一-JavaScript-Canvas-画线" class="headerlink" title="(一)  JavaScript Canvas 画线"></a>(一)  JavaScript Canvas 画线</h2><h3 id="1-准备HTML页面"><a href="#1-准备HTML页面" class="headerlink" title="1. 准备HTML页面"></a>1. 准备HTML页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">canvas</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">120deg</span>, <span class="number">#4a3934</span>, <span class="number">#e6d5b9</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-画线"><a href="#2-画线" class="headerlink" title="2. 画线"></a>2. 画线</h3><ul><li>掌握几个函数 <ul><li>translate() 平移坐标原点到指定坐标位置</li><li>moveTo(0, 0) 移动到坐标位置(0, 0)</li><li>beginPath() 开始路径</li><li>closePath() 关闭路径</li><li>rotate() 旋转</li><li>save()</li></ul></li><li>画一根线</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">     canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     <span class="comment">//平移到坐标canvas中心点，那么原点就是此坐标点</span></span></span><br><span class="line"><span class="javascript">     ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="comment">//从中心点到 (200, 0) 这个位置画一根线</span></span></span><br><span class="line"><span class="javascript">     ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)     </span></span><br><span class="line"><span class="javascript">     ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线的颜色样式 为 黑色</span></span></span><br><span class="line"><span class="javascript">     ctx.strokeStyle =  <span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线宽</span></span></span><br><span class="line"><span class="javascript">     ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">     ctx.stroke()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如下图所示,注意此时并没有使用beginPath()也没有使用closePath()</p><p><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/1.png"></p><ul><li>在第一根线的基础上, 再画一根线</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">     canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     <span class="comment">//平移到坐标canvas中心点，那么原点就是此坐标点</span></span></span><br><span class="line"><span class="javascript">     ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="comment">//从中心点到 (200, 0) 这个位置画一根线</span></span></span><br><span class="line"><span class="javascript">     ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)     </span></span><br><span class="line"><span class="javascript">     ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线的颜色样式 为 黑色</span></span></span><br><span class="line"><span class="javascript">     ctx.strokeStyle =  <span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线宽</span></span></span><br><span class="line"><span class="javascript">     ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">     ctx.stroke()</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     ctx.strokeStyle =  <span class="string">&quot;red&quot;</span> </span></span><br><span class="line"><span class="javascript">     ctx.lineTo(<span class="number">200</span>, <span class="number">30</span>)</span></span><br><span class="line"><span class="javascript">     ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">     ctx.stroke() </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果如图所示: 第一根线的样式完全变成了第二根线的样式，原因是画完第一根线时并没有关闭路径，也就是没有调用closePath()方法，导致第二根线的起始点会在第一根的结束坐标开始</p><p><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/2.png"></p><ul><li>在画完第一根线后closePath(), 关闭路径后，下一根线的起点将从原点(0,0)开始, 但是第一根线的颜色从black变成了red</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">     canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     <span class="comment">//平移到坐标canvas中心点，那么原点就是此坐标点</span></span></span><br><span class="line"><span class="javascript">     ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="comment">//从中心点到 (200, 0) 这个位置画一根线</span></span></span><br><span class="line"><span class="javascript">     ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)     </span></span><br><span class="line"><span class="javascript">     ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线的颜色样式 为 黑色</span></span></span><br><span class="line"><span class="javascript">     ctx.strokeStyle =  <span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线宽</span></span></span><br><span class="line"><span class="javascript">     ctx.lineWidth = <span class="number">10</span></span></span><br><span class="line"><span class="javascript">     ctx.stroke()</span></span><br><span class="line"><span class="javascript">     ctx.closePath() <span class="comment">//关闭路径</span></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     ctx.strokeStyle =  <span class="string">&quot;red&quot;</span> </span></span><br><span class="line"><span class="javascript">     ctx.lineTo(<span class="number">200</span>, <span class="number">20</span>)</span></span><br><span class="line"><span class="javascript">     ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">     ctx.stroke() </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/3.png"></p><ul><li>为了让每一根线的样子能独立出来，相互不影响，需要使用beginPath() 顾名思义就是开始路径</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">     canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">     canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">     <span class="comment">//平移到坐标canvas中心点，那么原点就是此坐标点</span></span></span><br><span class="line"><span class="javascript">     ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="comment">//第一根线路径开始</span></span></span><br><span class="line"><span class="javascript">     ctx.beginPath() </span></span><br><span class="line"><span class="javascript">     <span class="comment">//从中心点到 (200, 0) 这个位置画一根线</span></span></span><br><span class="line"><span class="javascript">     ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)     </span></span><br><span class="line"><span class="javascript">     ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线的颜色样式 为 黑色</span></span></span><br><span class="line"><span class="javascript">     ctx.strokeStyle =  <span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">//设定线宽</span></span></span><br><span class="line"><span class="javascript">     ctx.lineWidth = <span class="number">10</span></span></span><br><span class="line"><span class="javascript">     ctx.stroke()</span></span><br><span class="line"><span class="javascript">     ctx.closePath() <span class="comment">//关闭路径</span></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">     <span class="comment">//第二根线路径开始</span></span></span><br><span class="line"><span class="javascript">     ctx.beginPath()</span></span><br><span class="line"><span class="javascript">     ctx.strokeStyle =  <span class="string">&quot;red&quot;</span> </span></span><br><span class="line"><span class="javascript">     ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>)  <span class="comment">//或者直接使用lineTo(0,0)</span></span></span><br><span class="line"><span class="javascript">     ctx.lineTo(<span class="number">200</span>, <span class="number">20</span>)</span></span><br><span class="line"><span class="javascript">     ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">     ctx.stroke() </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/4.png"></p><ul><li>下面利用旋转函数rotate画出下面的图形, 需要知晓以下数学知识<ul><li>1弧度是 大约 57.2958角度</li><li>将<strong>弧度转换为角度</strong>：乘以 180，除以 <strong>π</strong></li><li>将<strong>角度转换为弧度</strong>：乘以 <strong>π</strong>，除以 180</li><li>弧度是基于圆的半径的纯计量单位</li><li>在一个半圆上有 <strong>π</strong> 弧度，也等于 180°,    所以: π 弧度    =    180°  那么 : 1弧度    =    180°/π   =    57.2958……°</li><li><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/6.png"></li><li><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/7.png"></li><li><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/8.png"></li></ul></li></ul><p><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/5.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到坐标canvas中心点，那么原点就是此坐标点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//第一根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath() </span></span><br><span class="line"><span class="javascript">    <span class="comment">//从中心点到 (200, 0) 这个位置画一根线</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)     </span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定线的颜色样式 为 黑色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定线宽</span></span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">10</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    ctx.closePath() <span class="comment">//关闭路径</span></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">    <span class="comment">//第二根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//旋转30度  30*Math.PI/180 是一个转换公式</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;red&quot;</span> </span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke() </span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"><span class="comment">//第三根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;yellow&quot;</span> </span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke() </span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">//第四根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;pink&quot;</span> </span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke() </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>如果再加上**ctx.save()<strong>和</strong>ctx.restore()**函数，看看有什么区别? 把第三根线加上save和restore方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到坐标canvas中心点，那么原点就是此坐标点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//第一根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath() </span></span><br><span class="line"><span class="javascript">    <span class="comment">//从中心点到 (200, 0) 这个位置画一根线</span></span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>, <span class="number">0</span>)     </span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定线的颜色样式 为 黑色</span></span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//设定线宽</span></span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">10</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke()</span></span><br><span class="line"><span class="javascript">    ctx.closePath() <span class="comment">//关闭路径</span></span></span><br><span class="line"><span class="javascript">     </span></span><br><span class="line"><span class="javascript">    <span class="comment">//第二根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    <span class="comment">//旋转30度  30*Math.PI/180 是一个转换公式</span></span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;red&quot;</span> </span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke() </span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"><span class="comment">//第三根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.save()</span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;yellow&quot;</span> </span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke() </span></span><br><span class="line"><span class="javascript">    ctx.restore()</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">//第四根线路径开始</span></span></span><br><span class="line"><span class="javascript">    ctx.beginPath()</span></span><br><span class="line"><span class="javascript">    ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">    ctx.strokeStyle =  <span class="string">&quot;pink&quot;</span> </span></span><br><span class="line"><span class="javascript">    ctx.moveTo(<span class="number">0</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">    ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">    ctx.stroke() </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果是第四根线不再依据第三根线旋转角度，而是依据第二根红线旋转角度，对于第四根线来说就好像第三根线不存在一样, 据此可以明白save() restore()的作用</p><p><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/9.png"></p><ul><li>利用函数+循环实现，颜色使用HSL随机</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    canvas.width = <span class="built_in">window</span>.innerWidth</span></span><br><span class="line"><span class="javascript">    canvas.height = <span class="built_in">window</span>.innerHeight</span></span><br><span class="line"><span class="javascript">    <span class="comment">//平移到坐标canvas中心点，那么原点就是此坐标点</span></span></span><br><span class="line"><span class="javascript">    ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    drawLine();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">drawLine</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        ctx.translate(canvas.width/<span class="number">2</span>, canvas.height/<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++) &#123;</span></span><br><span class="line"><span class="javascript">            ctx.beginPath()</span></span><br><span class="line"><span class="javascript">            ctx.strokeStyle = <span class="string">&#x27;hsl(&#x27;</span>+<span class="built_in">Math</span>.random()*<span class="number">360</span>+<span class="string">&quot;,100%,50%)&quot;</span></span></span><br><span class="line"><span class="javascript">            ctx.lineWidth = <span class="number">5</span></span></span><br><span class="line"><span class="javascript">            ctx.rotate(<span class="number">30</span>*<span class="built_in">Math</span>.PI/<span class="number">180</span>)</span></span><br><span class="line"><span class="javascript">            ctx.lineTo(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">            ctx.lineTo(<span class="number">200</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="javascript">            ctx.stroke()</span></span><br><span class="line"><span class="javascript">            ctx.closePath()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下图:</p><p><img src="/2022/07/19/JavaScript/(1)-JavaScript-Canvas%E7%94%BB%E7%BA%BF/10.png"></p><blockquote><p>利用上面所了解的知识点，能画出一个五角星吗? 下一篇来试试</p></blockquote>]]></content>
    
    
    <summary type="html">JavaScript基础,Canvas</summary>
    
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>JavaFX扫雷</title>
    <link href="https://zhsunbeam.github.io/2022/07/18/Java/JavaFX%E6%89%AB%E9%9B%B7/"/>
    <id>https://zhsunbeam.github.io/2022/07/18/Java/JavaFX%E6%89%AB%E9%9B%B7/</id>
    <published>2022-07-18T08:02:13.000Z</published>
    <updated>2022-07-19T03:22:27.061Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2022/07/18/Java/JavaFX%E6%89%AB%E9%9B%B7/1.png"></p><blockquote><p>windows系统上经典扫雷游戏，1992年4月6日，扫雷和纸牌、空当接龙等小游戏搭载在Windows 3.1系统中与用户见面，主要目的是让用户训练使用鼠标。这个游戏的玩法很简单，有初级、中级、高级和自定义等模式，雷区中随机布置一定数量的地雷，玩家需要尽快找出所有不是地雷的方块，但不许踩到地雷。这里我们使用Java和JavaFX实现一个简易版的扫雷程序，先理解扫雷游戏逻辑，练习使用Java中的循环、数组、二维数组、集合、面向对象、Stream、递归等技术实现游戏功能。</p></blockquote><h3 id="游戏逻辑"><a href="#游戏逻辑" class="headerlink" title="游戏逻辑"></a>游戏逻辑</h3><ol><li>需要一个图形界面，使用JavaFX实现</li><li>需要在图形界面中定义一个 N * N 的网格， N可以是任意设置</li><li>N * N个格子中有三个内容： 空白、数字(表示周围8个格子有多少个雷)、雷</li><li>在N * N个格子中随机生成<strong>雷</strong></li><li>在N * N个格子中的不是雷的格子中设置相应的数字，这个数字表示当前格子周围8个格子有多少个雷</li><li>玩家在点击某一个格子时显示的是数字，比如说 显示的是2，表示周围八个格子中有两个雷</li><li>如果玩家点击的格子显示为空白，那么会要把周围8个格子全部显示，如果周围8个格子有空白格子，又需要将空白格子周围8个格子全部显示，依次类推</li><li>如果玩家点击的位置是雷，游戏结束</li></ol><p><img src="/2022/07/18/Java/JavaFX%E6%89%AB%E9%9B%B7/2.png"></p><h3 id="游戏实现"><a href="#游戏实现" class="headerlink" title="游戏实现"></a>游戏实现</h3><h4 id="1-创建JavaFX-Module"><a href="#1-创建JavaFX-Module" class="headerlink" title="1. 创建JavaFX Module"></a>1. 创建JavaFX Module</h4><ul><li>参考 <a href="http://codecool.top/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/">Java模块化编程</a>  修改module-info.java文件，添加javafx模块支持</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//module声明一个模块 加上 opens 关键词表示模块内的所有包都允许通过 Java 反射访问</span></span><br><span class="line"> <span class="keyword">module</span> example.fxdemo &#123;</span><br><span class="line">    <span class="comment">//声明模块依赖</span></span><br><span class="line">    <span class="keyword">requires</span> javafx.controls;</span><br><span class="line">    <span class="keyword">requires</span> javafx.fxml;</span><br><span class="line">    <span class="keyword">requires</span> javafx.swing;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开放模块内的包, 允许通过java反射访问，一次开放一个包,如果外部使用了open,那么内部将不能使用opens</span></span><br><span class="line">    opens com.example.fxdemo to javafx.fxml,javafx.controls;</span><br><span class="line">    opens com.example to javafx.fxml;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//导出这个包com.example.game，以便别的模块可以使用</span></span><br><span class="line">    <span class="keyword">exports</span> com.example.game;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-工程结构"><a href="#2-工程结构" class="headerlink" title="2. 工程结构"></a>2. 工程结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">-main</span><br><span class="line">   -java</span><br><span class="line">   com.example.game</span><br><span class="line">   MinesweeperGame</span><br><span class="line">   module-info.java</span><br></pre></td></tr></table></figure><h4 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3. 代码实现"></a>3. 代码实现</h4><ul><li><p>创建游戏界面  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MinesweeperGame</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="comment">//Tile数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TILE_SIZE = <span class="number">40</span>;</span><br><span class="line">    <span class="comment">//界面宽和高</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> W = <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> H = <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//x轴上 20个格子(tile)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> X_TILES = W / TILE_SIZE;</span><br><span class="line">    <span class="comment">//y轴上 15个格子(tile)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> Y_TILES = H / TILE_SIZE;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">//UI 场景对象</span></span><br><span class="line">    <span class="keyword">private</span> Scene scene;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//此方法用于创建一个面板Pane N*N个格子会绘制在里边</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Parent <span class="title">createContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Pane root = <span class="keyword">new</span> Pane();</span><br><span class="line">        root.setPrefSize(W, H);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage stage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//根据面板创建场景对象</span></span><br><span class="line">        scene = <span class="keyword">new</span> Scene(createContent());</span><br><span class="line">        <span class="comment">//设置舞台Stage标题</span></span><br><span class="line">        stage.setTitle(<span class="string">&quot;扫雷游戏&quot;</span>);</span><br><span class="line">        <span class="comment">//设置舞台场景</span></span><br><span class="line">        stage.setScene(scene);</span><br><span class="line">        <span class="comment">//显示</span></span><br><span class="line">        stage.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下图所示:</p><p><img src="/2022/07/18/Java/JavaFX%E6%89%AB%E9%9B%B7/3.png"></p></li><li><p>创建Tile类</p><ul><li>此类定义成内部类</li><li>使用面向对象技术创建一个Tile类，这个类需要绘制到上面所定义的面板Pane上面，而且Tile内部还需要绘制其它内容，比如数字和雷，所以此类继承</li><li>StackPane，每一个Tile类对象都表示一个格子, Tile中文意思是砖块。 </li><li>每一个Tile对象需包含坐标x,y   是否有雷 hasBomb, 是否是打开的isOpen(玩家点击的时候才会打开)</li><li>每一个Tile对象还需要包含一个文本区域用于设置数字，周围还需要绘制一个矩形边框增强效果，此时需要用到图形界面JavaFX技术</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Tile</span> <span class="keyword">extends</span> <span class="title">StackPane</span> </span>&#123;</span><br><span class="line">    <span class="comment">//每个Tile对象的坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="comment">//是否有雷</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> hasBomb;</span><br><span class="line">    <span class="comment">//是否打开,默认为false</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isOpen = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//定义矩形边框</span></span><br><span class="line">    <span class="keyword">private</span> Rectangle border = <span class="keyword">new</span> Rectangle(TILE_SIZE - <span class="number">2</span>, TILE_SIZE - <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//文本对象,用于设置格子中的数字等</span></span><br><span class="line">    <span class="keyword">private</span> Text text = <span class="keyword">new</span> Text();</span><br><span class="line"><span class="comment">//构造函数，用于初始化坐标位置和是否有雷</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Tile</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">boolean</span> hasBomb)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">        <span class="keyword">this</span>.hasBomb = hasBomb;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//UI 设置格子的边框颜色，颜色使用Colod类静态预定义值 </span></span><br><span class="line">        border.setStroke(Color.LIGHTGRAY);</span><br><span class="line"><span class="comment">//设置文本字体大小 使用  Font类中中的font静态方法</span></span><br><span class="line">        text.setFont(Font.font(<span class="number">18</span>));</span><br><span class="line"><span class="comment">//设置文本框中的内容，此时判断hasBomb值，如果为真则表示有雷，此处用X表示雷,如果为false表示没有雷，文本内容则为空</span></span><br><span class="line">        text.setText(hasBomb ? <span class="string">&quot;X&quot;</span> : <span class="string">&quot;&quot;</span>);<span class="comment">//X表示雷</span></span><br><span class="line">        <span class="comment">//默认不显示文本 </span></span><br><span class="line">        text.setVisible(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">//设置矩形的透明度</span></span><br><span class="line">        border.setOpacity(<span class="number">0.8</span>);</span><br><span class="line">        <span class="comment">//当前是一个StackPane面板容器，需要将矩形和文本组件添加到面板容器中，而且面板容器是一个Stack（栈）,根据栈的特性，最后添加进去的在最上面</span></span><br><span class="line">        getChildren().addAll(border, text);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置当前Tile对象的x和y的位置,用处是绘制每一个StackPane也就是Tile, 每一个格子定义了一个值为TILE_SIZE=40</span></span><br><span class="line">        setTranslateX(x * TILE_SIZE);</span><br><span class="line">        setTranslateY(y * TILE_SIZE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//为每一个Tile格子对象注册一个事件，当点击的时候调用open方法，此时需要判断格子是不是打开的，利用isOpen属性  </span></span><br><span class="line">        setOnMouseClicked(e -&gt; open());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果是打开的则直接返回,不再执行后续逻辑</span></span><br><span class="line">        <span class="keyword">if</span> (isOpen)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//如果点到了雷，则游戏结束</span></span><br><span class="line">        <span class="keyword">if</span> (hasBomb) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Game Over&quot;</span>);</span><br><span class="line">            <span class="comment">//重新再创建一个内容,重新设置场景，也可以通过按钮点击时重新设置</span></span><br><span class="line">            scene.setRoot(createContent());</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//如果前两个判断都没进入则表示Tile格子未翻开，设置isOpen为true,表示已打开，然后显示文本内容，并让矩形的填充内容为空</span></span><br><span class="line">        isOpen = <span class="keyword">true</span>;</span><br><span class="line">        text.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        border.setFill(<span class="keyword">null</span>);</span><br><span class="line"><span class="comment">//如果点击时Text内容是空的，那么需要显示周围8个格子</span></span><br><span class="line">        <span class="keyword">if</span> (text.getText().isEmpty()) &#123;</span><br><span class="line">            <span class="comment">//此处需要找到周围的8个Tile对象，遍历每一个，并判断是不是空格，如果是空格则需要再次执行getNeighbors方法</span></span><br><span class="line">            <span class="comment">//getNeighbors方法用于查找相邻的8个Tile格子</span></span><br><span class="line">            <span class="comment">//forEach语法是Java8之后的新语法，遍历每一个Tile格子对象时都会调用它的open方法</span></span><br><span class="line">            getNeighbors(<span class="keyword">this</span>).forEach(Tile::open);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现查找空白Tile相邻的8个Tile</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要在MinesweeperGame类中定义属性 Tile类型的二维数组  20x15  存储Tile对象</span></span><br><span class="line"><span class="keyword">private</span> Tile[][] grid = <span class="keyword">new</span> Tile[X_TILES][Y_TILES];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  查找周边八个tile方格是不是雷</span></span><br><span class="line"><span class="comment"> *  定义一个二维数组, 数组的每二个值表示一个tile的周围八个格子的坐标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> List&lt;Tile&gt; <span class="title">getNeighbors</span><span class="params">(Tile tile)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//存储邻居tile块使用集合ArrayList存储，并用接口List引用,&lt; &gt; 表示泛型， Tile是内部类</span></span><br><span class="line">    List&lt;Tile&gt; neighbors = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">//定义一个数组，每两个元素分别表示当前格子和其它8个格子的坐标差</span></span><br><span class="line">    <span class="keyword">int</span>[] points = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;</span><br><span class="line">       -<span class="number">1</span>, -<span class="number">1</span>,</span><br><span class="line">       -<span class="number">1</span>,  <span class="number">0</span>,</span><br><span class="line">       -<span class="number">1</span>,  <span class="number">1</span>,</span><br><span class="line">        <span class="number">0</span>, -<span class="number">1</span>,</span><br><span class="line">        <span class="number">0</span>,  <span class="number">1</span>,</span><br><span class="line">        <span class="number">1</span>, -<span class="number">1</span>,</span><br><span class="line">        <span class="number">1</span>,  <span class="number">0</span>,</span><br><span class="line">        <span class="number">1</span>,  <span class="number">1</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="comment">//遍历这个数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; points.length; i++) &#123;</span><br><span class="line"><span class="comment">//每两个元素表示一个坐标,所以dx为points[i], dy则为points[++i]</span></span><br><span class="line">        <span class="keyword">int</span> dx = points[i]; </span><br><span class="line">        <span class="keyword">int</span> dy = points[++i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算新的tile格子坐标,当前格子的坐标值加上dx,dy</span></span><br><span class="line">        <span class="keyword">int</span> newX = tile.x + dx;</span><br><span class="line">        <span class="keyword">int</span> newY = tile.y + dy;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//此处X_TILES=20, Y_TILES=15</span></span><br><span class="line">        <span class="comment">//判断每个新的Tile对象的坐标是否超出范围,如果没有超出范围则加到ArrayList集合中</span></span><br><span class="line">        <span class="keyword">if</span> (newX &gt;= <span class="number">0</span> &amp;&amp; newX &lt; X_TILES &amp;&amp; newY &gt;= <span class="number">0</span> &amp;&amp; newY &lt; Y_TILES) &#123;</span><br><span class="line">            <span class="comment">//grid是一个存储了所有tile对象的二维数组</span></span><br><span class="line">            neighbors.add(grid[newX][newY]);<span class="comment">//将周边的Tile添加到集合中</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//返回相邻元素的集合</span></span><br><span class="line">    <span class="keyword">return</span> neighbors;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/18/Java/JavaFX%E6%89%AB%E9%9B%B7/4.png"></p></li><li><p>修改createContent方法，创建界面内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Parent <span class="title">createContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建内容面板,用于放置其它界面元素</span></span><br><span class="line">    Pane root = <span class="keyword">new</span> Pane();</span><br><span class="line">    <span class="comment">//设置宽高</span></span><br><span class="line">    root.setPrefSize(W, H);</span><br><span class="line"><span class="comment">//嵌套循环遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; Y_TILES; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; X_TILES; x++) &#123;</span><br><span class="line">            <span class="comment">//创建Tile对象</span></span><br><span class="line">            <span class="comment">//第三个参数表示是否有雷，此时用一个简单的方式设置雷，当随机数小于0.3时表示有雷</span></span><br><span class="line">            Tile tile = <span class="keyword">new</span> Tile(x, y, Math.random() &lt; <span class="number">0.3</span>);</span><br><span class="line">            <span class="comment">//将每一个tile对象存储在二维数组中,二维数组中的每一个元素都表示一个tile</span></span><br><span class="line">            grid[x][y] = tile;</span><br><span class="line">            <span class="comment">//将元素添加到root root是一个Pane</span></span><br><span class="line">            root.getChildren().add(tile);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历二维数组，判断每一个tile是不是雷,如果是雷则continue,否则需要计算当前tile边上雷的数量</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; Y_TILES; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; X_TILES; x++) &#123;</span><br><span class="line">            Tile tile = grid[x][y];</span><br><span class="line">            <span class="comment">//有雷则循环continue</span></span><br><span class="line">            <span class="keyword">if</span> (tile.hasBomb)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//找雷是为了设置tile砖块中的数字</span></span><br><span class="line">            <span class="comment">//如果不是雷，则需要计算它周边有多少个雷,调用getNeighbors方法</span></span><br><span class="line">            <span class="comment">//此处用到了Java8中的stream以及箭头函数等</span></span><br><span class="line">            <span class="keyword">long</span> bombs = getNeighbors(tile).stream().filter(t -&gt; t.hasBomb).count();</span><br><span class="line"><span class="comment">//如果周边雷的数量大于0则将tile对象中的文本框设置为雷的数量</span></span><br><span class="line">            <span class="keyword">if</span> (bombs &gt; <span class="number">0</span>)</span><br><span class="line">                tile.text.setText(String.valueOf(bombs));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/18/Java/JavaFX%E6%89%AB%E9%9B%B7/5.png"></p></li><li><p>完成并总结</p><ul><li>其实扫雷游戏的实现并不难，只需要掌握最基础的Java技术便能实现</li><li>创建类以及定义属性和行为、</li><li>使用JavaFX制作图形界面</li><li>一维数组和二维数组的定义和赋值</li><li>Java8中的新特性 forEach, stream, 箭头函数等</li></ul></li></ul>]]></content>
    
    
    <summary type="html">游戏,Java游戏,JavaFX,扫雷游戏</summary>
    
    
    
    <category term="Java" scheme="https://zhsunbeam.github.io/categories/Java/"/>
    
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java" scheme="https://zhsunbeam.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java 模块化编程</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/</id>
    <published>2022-07-17T03:44:51.934Z</published>
    <updated>2022-07-18T04:51:53.410Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>现在，Java每半年发布一个版本，知道为什么这么快吗？这主要得益于Java的模块化技术。 换作以前，时间得以【年】计算。 从本质上讲，模块化(modularization） 是指将系统分解成独立且相互连接的模块的行为。模抉（ module） 是包含代码的可识别部分，使用元数据来描述模块与其它模块之间的关系。在Java 模块系统之前， JDK 的运行时库由一个庞大的rt.jar 所组成，其大小超过60MB ，包含了Java 大部分运行时类： 即Java 平台的最终载体。为了获得一个灵活且符合未来发展方向的平台， JDK 团队着手对JDK 进行模块化。模块化可以将jar声明为模块，它将在其自己的<code>隔离类加载器</code>中运行，该类加载器以OSGI方式从其他类似的模块类加载器读取类文件。这将允许同一版本的Jar的<code>多个版本共存</code>。 毕竟Java太庞大，模块化过程持续了几年时间，最终随Java9发布. </p></blockquote><h3 id="Java9模块化系统出现以前Java模块化的核心三原则"><a href="#Java9模块化系统出现以前Java模块化的核心三原则" class="headerlink" title="Java9模块化系统出现以前Java模块化的核心三原则:"></a>Java9模块化系统出现以前Java模块化的核心三原则:</h3><ul><li>组合使用package和访问修饰符(public,protected,private)可以实现类型封装</li><li>定义良好的接口, 也就是使用interface关键字公开公共接口</li><li>显式依赖，也就是使用import关键字</li></ul><h3 id="Java9之后模块化"><a href="#Java9之后模块化" class="headerlink" title="Java9之后模块化"></a>Java9之后模块化</h3><ul><li>JDK 由大约90个模抉组成，而不是一个整体库。与可由自己创建的应用程序模块不同的是，平台模块是JDK的一部分。从技术上讲，平台模块和应用模块之间没有任何技术区别。每个平台模块都构成了JDK 的一个定义良好的功能块，从日志记录到XML 支持。所有模块都显式地定义了与其他模块的依赖关系。</li></ul><h3 id="模块工作原理"><a href="#模块工作原理" class="headerlink" title="模块工作原理"></a>模块工作原理</h3><ul><li><p>什么是模块，它是如何定义的？模块拥有一个<strong>名称</strong>，并对相关的代码以及可能的其他资源进行分组，使用一个模块描述符进行描述。模块描述符保存在一个名为 <strong>module-info.java</strong>  的文件中, 为此我们先创建一个Project,然后在Project下创建两个module, 如图所示:</p><ol><li>创建一个Project  jfxdemo</li></ol><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/1.png"></p><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/2.png"></p><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/3.png"></p><ol start="2"><li>在这个jfxdemo工程下创建二个javafx  module, 以下是第一个模块demo1</li></ol><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/4.png"></p><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/5.png"></p><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/6.png"></p><ol start="3"><li>第二个模块 demo2</li></ol><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/7.png"></p></li><li><p>创建完成后可以发现，每个module下都有一个模块描述文件  module-info.java</p><blockquote><p>此处我们使用javafx是为了后续开发游戏做准备，同时Javafx库默认情况下不能直接在应用程序中使用，必须使用模块描述文件来导入 </p></blockquote></li><li><p>查看demo1模块的module-info.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> com.example1.demo1 &#123;</span><br><span class="line">    <span class="keyword">requires</span> javafx.controls;</span><br><span class="line">    <span class="keyword">requires</span> javafx.fxml;</span><br><span class="line">    opens com.example.demo1 to javafx.fxml;</span><br><span class="line">    <span class="keyword">exports</span> com.example1.demo1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>module-info.java文件中的第一行表示，当前应用是一个模块，模块名为 com.example.demo1, 模块名称虽然随便写个字符串也可以，但最好以域名作为基础，也就是使用反向DNS符号来确保模块的唯一性，后面紧跟着项目名称，建议尽量使用自己的域名。模块都位于一个全局命名空间中，因此，模块名称必须唯一。</p></li><li><p>requires 表示一个依赖关系，此是表示当前应用程序需要使用到javafx.controls模块以及javafx.xml模块,如果将这两句代码删除，那么在需要引用这两个模块的类中将会提示错误, 如下图所示 :</p><ul><li>注释了requires javafx.fxml;</li><li>在HelloApplication中将无法使用</li></ul><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/8.png"></p><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/9.png"></p></li><li><p>exports的意思是来自com.example.demo1模块的单个包被导出到其它模块</p></li><li><p>opens表示com.example.demo1中的类型可用于深度反射</p></li></ul></li></ul><h3 id="模块化开发"><a href="#模块化开发" class="headerlink" title="模块化开发"></a>模块化开发</h3><blockquote><p>在demo2模块中需要使用demo1模块中的定义的类</p></blockquote><ol><li>demo1模块中的module-info.java配置如下:</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> com.example.demo1 &#123;</span><br><span class="line">    <span class="keyword">requires</span> javafx.controls;</span><br><span class="line">    <span class="keyword">requires</span> javafx.fxml;</span><br><span class="line">    opens com.example.demo1 to javafx.fxml;</span><br><span class="line">    <span class="keyword">exports</span> com.example.demo1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在module  demo2中的pom.xml文件中加入demo1的依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo1<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在demo2中要使用demo1模块中的类，则需要在demo2 模块中修改module-info.java文件</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> com.example.demo2 &#123;</span><br><span class="line">    <span class="keyword">requires</span> javafx.controls;</span><br><span class="line">    <span class="keyword">requires</span> javafx.fxml;</span><br><span class="line">    <span class="keyword">requires</span> com.example.demo1; <span class="comment">//引入名称为com.example.demo1的模块</span></span><br><span class="line"></span><br><span class="line">    opens com.example.demo2 to javafx.fxml;</span><br><span class="line">    <span class="keyword">exports</span> com.example.demo2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在demo2模块中的HelloApplication中使用demo1模块中的类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.fxml.FXMLLoader;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> com.example.demo1.*; <span class="comment">//此处引用demo1模块API</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage stage)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FXMLLoader fxmlLoader = <span class="keyword">new</span> FXMLLoader(HelloApplication.class.getResource(<span class="string">&quot;hello-view.fxml&quot;</span>));</span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(fxmlLoader.load(), <span class="number">320</span>, <span class="number">240</span>);</span><br><span class="line">        stage.setTitle(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line">        stage.setScene(scene);</span><br><span class="line">        stage.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        launch();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>如果在demo1模块中新建两个包，demo2模块中需要引用则要在demo1模块的module-info.java 文件中加入exports</li></ol><p><img src="/2022/07/17/Java/Java%E6%A8%A1%E5%9D%97%E5%8C%96/10.png"></p><p>   demo2模块中的HelloApplication</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.fxml.FXMLLoader;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> com.example.demo1.*;</span><br><span class="line"><span class="keyword">import</span> com.example.demo1.service.*;</span><br><span class="line"><span class="keyword">import</span> com.example.demo1.dao.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage stage)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FXMLLoader fxmlLoader = <span class="keyword">new</span> FXMLLoader(HelloApplication.class.getResource(<span class="string">&quot;hello-view.fxml&quot;</span>));</span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(fxmlLoader.load(), <span class="number">320</span>, <span class="number">240</span>);</span><br><span class="line">        stage.setTitle(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line">        stage.setScene(scene);</span><br><span class="line">        stage.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        launch();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面的内容中使用了java11进行模块化开发的第一步，也就是手动编写自己的第一个模块，而不仅仅是查看JDK中现有的模块。有了这部分经验后，后续就可以创建更加复杂的模块</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;现在，Java每半年发布一个版本，知道为什么这么快吗？这主要得益于Java的模块化技术。 换作以前，时间得以【年】计算。 从本质上讲，模块化(modularization） 是指将系统分解成独立且相互连接的模块的行为。模抉（ module） 是包含</summary>
      
    
    
    
    <category term="Java" scheme="https://zhsunbeam.github.io/categories/Java/"/>
    
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java" scheme="https://zhsunbeam.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>玩游戏学编程-猜数字</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B/</id>
    <published>2022-07-17T01:19:56.088Z</published>
    <updated>2021-11-30T06:07:33.303Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一些编程初学者的痛点在于认识的英语单词太少，不知道程序在运行过程中需要什么？通过开发游戏学习编程，是一个快速但又不会觉得枯燥的方法；在这篇简单的猜数字游戏中，来看看程序开发过程中逻辑是怎样形成的？为了达到期望的结果，需要做哪些工作?</p></blockquote><blockquote><p>猜数字游戏过程: 用户自己输入一个数字A和程序中产生的一个数字B进行比较，如果A大于B则提示太大了，否则提示太小了，直到输入的数字A与产生的数字B相等，游戏结束，程序还需要设置一个猜的次数，如果超过次数则没猜中则游戏失败，否则成功。</p></blockquote><hr><h3 id="猜数字游戏"><a href="#猜数字游戏" class="headerlink" title="猜数字游戏"></a>猜数字游戏</h3><h5 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h5><ol><li>程序中需要哪些变量?</li><li>用户要怎样输入? </li><li>怎样产生随机数字 ?</li><li>怎样使用循环和判断 ?</li><li>怎样创建对象 ?  它是用来干嘛的 ?</li></ol><h5 id="二、解决问题"><a href="#二、解决问题" class="headerlink" title="二、解决问题"></a>二、解决问题</h5><blockquote><p>使用Scanner对象获取玩家的输入，当然还需要System.in</p></blockquote><blockquote><p>定义变量input用于存储用户输入的数字，定义number存储计算机生成的随机数</p></blockquote><blockquote><p>为了控制循环和判断的逻辑还需要两个控制变量 running 和  guessed</p></blockquote><blockquote><p>为了控制玩家输入的次数，需要定义count计数器变量计数</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.coolcode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuessNumber</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//玩家需要输入，且输入的会是一个数字</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//程序运行所需要的要素,我怎么会想到需要这个,你是怎样想到的?</span></span><br><span class="line">        <span class="keyword">boolean</span> running = <span class="keyword">true</span>; <span class="comment">//控制游戏是否继续</span></span><br><span class="line">        <span class="keyword">boolean</span> guessed = <span class="keyword">true</span>; <span class="comment">//控制是否要猜数字</span></span><br><span class="line">        <span class="comment">//计算机帮我们生成的数字</span></span><br><span class="line">        <span class="keyword">int</span> number = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//游戏玩家输入的数字</span></span><br><span class="line">        <span class="keyword">int</span> input = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//记录猜的次数</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//游戏是否能一直玩，靠的是这个running</span></span><br><span class="line">        <span class="keyword">while</span>(running) &#123;</span><br><span class="line">            <span class="keyword">if</span>(count&gt;<span class="number">3</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;三次机会已用完，游戏失败. 您可以继续游戏；退出输入-1&quot;</span>);</span><br><span class="line">                guessed = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断是否要猜数字</span></span><br><span class="line">            <span class="keyword">if</span>(guessed==<span class="keyword">true</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;计算机已经随机产生一个数，范围是0~20&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;您可以猜猜看, 退出输入  -1&quot;</span>);</span><br><span class="line">                number = getRandom(<span class="number">20</span>);</span><br><span class="line">                guessed = <span class="keyword">false</span>;<span class="comment">//设置为false,如果后续没有设置为true，就不会产生新的随机数</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果上面的if分支进入了，那么说明随机数字已经产生</span></span><br><span class="line">            <span class="comment">//游戏玩家输入的数字</span></span><br><span class="line">            input = sc.nextInt();</span><br><span class="line">            <span class="comment">//判断用户输入</span></span><br><span class="line">            <span class="comment">//如果用户输入的是-1表示结束游戏, 更改判断变量running为false,循环将终止</span></span><br><span class="line">            <span class="keyword">if</span>(input == -<span class="number">1</span>) &#123;</span><br><span class="line">                running = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(input &gt; number) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入的数字太大了,退出输入  -1&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(input &lt; number) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入的数字太小了,退出输入  -1&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(input == number)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;您猜对了，您可以继续游戏；退出输入  -1&quot;</span>);</span><br><span class="line">                guessed = <span class="keyword">true</span>; <span class="comment">//如果玩家没有输入-1则此变量设置为true,会继续产生随机数字</span></span><br><span class="line">            &#125;</span><br><span class="line">            count++;<span class="comment">//次数累加</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个函数用于产生随机数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getRandom</span><span class="params">(<span class="keyword">int</span> max)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)(Math.random()*max) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>简单的猜数字游戏，重要的是知道如何定义和使用程序运行过程中需要的要素(变量)，以及程序的执行流程。</p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一些编程初学者的痛点在于认识的英语单词太少，不知道程序在运行过程中需要什么？通过开发游戏学习编程，是一个快速但又不会觉得枯燥的方法；在这篇简单的猜数字游戏中，来看看程序开发过程中逻辑是怎样形成的？为了达到期望的结果，需要做哪些工作?&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    <category term="Java" scheme="https://zhsunbeam.github.io/categories/Java/"/>
    
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java" scheme="https://zhsunbeam.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>玩游戏学编程(1)-猜数字UI</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97UI%E7%95%8C%E9%9D%A2/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97UI%E7%95%8C%E9%9D%A2/</id>
    <published>2022-07-17T01:19:56.085Z</published>
    <updated>2021-11-30T07:39:55.359Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>游戏需要图形界面，虽然互联网时代Java FX 使用频率很小, 但是作为开发者，技多不压身，况且UI源码中有很多经典设计，是各类设计模式聚集地，可以让开发者加深对OOP、设计模式的理解。 如果把UI界面运用到游戏中去，既学到知识又增加趣味，岂不乐哉。</p></blockquote><h3 id="数字游戏界面"><a href="#数字游戏界面" class="headerlink" title="数字游戏界面"></a>数字游戏界面</h3><h5 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h5><ol><li>怎样使用JavaFX创建一个UI界面?</li><li>怎样创建一个按钮并添加到UI界面中?</li><li>怎样监听一个按钮的事件?</li><li>怎样使用线程开启一个异步任务?</li><li>在异步任务中绘图并添加到UI窗口</li></ol><h5 id="二、解决问题"><a href="#二、解决问题" class="headerlink" title="二、解决问题"></a>二、解决问题</h5><blockquote><ol><li>要编写一个JavaFX界面，需要创建一个类并继承javafx.application.Application类(Java8中可以直接使用，更高版本的Java引入了模块化，需要手动引入), 并重写start方法：</li><li>代码中的Stage参数可以认为是一个UI窗口，英文翻译成“舞台”, 调用它的show方法显示这个窗口</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.coolcode;</span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuessApp</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="comment">//显示“舞台”窗口</span></span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><blockquote><ol start="3"><li>窗口创建好之后需要创建一些内容放到这个窗口中，这个内容我们称为Scene , 英文翻译成<strong>场景</strong></li><li>可以独立创建一个函数，这个函数用来创建窗口界面中的内容</li><li>界面元素包含一个按钮Button, 并为这个按钮添加了一个事件处理函数,代码中使用了<strong>箭头函数</strong></li><li>设置对象的属性通常会使用set开头的函数</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.coolcode;</span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuessApp</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="comment">//垂直盒子布局容器</span></span><br><span class="line">    <span class="keyword">private</span> VBox root;</span><br><span class="line">    <span class="comment">//游戏中的地砖面板</span></span><br><span class="line">    <span class="keyword">private</span> Pane tilePane;</span><br><span class="line">    <span class="comment">//使用Executors创建线程</span></span><br><span class="line">    <span class="keyword">private</span> ScheduledExecutorService servicePool =        Executors.newSingleThreadScheduledExecutor();</span><br><span class="line">    <span class="comment">//存储所有数字框 的集合</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;TileView&gt; tileSequence = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//createContent()函数将会独立出来用于创建内容</span></span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(<span class="keyword">this</span>.createContent());</span><br><span class="line">       <span class="comment">//显示“舞台”窗口</span></span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> Parent <span class="title">createContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用垂直盒子进行布局，界面元素将会垂直放置在这个盒子容器中</span></span><br><span class="line">        <span class="comment">// root是定义在类上的属性</span></span><br><span class="line">        <span class="keyword">this</span>.root = <span class="keyword">new</span> VBox();</span><br><span class="line">        <span class="comment">//设置布局容器大小(宽，高)</span></span><br><span class="line">        root.setPrefSize(<span class="number">1024</span>, <span class="number">500</span>);</span><br><span class="line">        <span class="comment">//创建按钮对象</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">        <span class="comment">//为按钮添加一个事件处理函数startGame(),也就是说当按下按钮后，这个函数就会被调用</span></span><br><span class="line">        button.setOnAction(e-&gt;startGame());</span><br><span class="line">        <span class="comment">//创建一个面板</span></span><br><span class="line">        Pane pane = <span class="keyword">new</span> Pane();</span><br><span class="line">        <span class="comment">//获取这个垂直盒子容器并将面板和按钮添加到容器中</span></span><br><span class="line">        root.getChildren().addAll(pane, button);</span><br><span class="line">        <span class="comment">//返回这个垂直盒子容器，返回的内容将会被添加到舞台Stage</span></span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><blockquote><ol start="7"><li>编写按钮事件处理函数</li><li>在函数中会调用随机产生数字方格的函数populateGrid()，并将此函数返回的内容添加到VBox根容器</li><li>此函数中有一个计划任务，实际上使用的是Java中的线程池，同时还使用到了Java8中的Stream编程</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startGame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.tilePane = <span class="keyword">this</span>.populateGrid(); </span><br><span class="line">    <span class="keyword">this</span>.root.getChildren().set(<span class="number">0</span>, tilePane); </span><br><span class="line">    <span class="comment">//6秒后执行线程,计划任务</span></span><br><span class="line">    <span class="keyword">this</span>.servicePool.schedule(()-&gt;&#123;</span><br><span class="line">        tilePane.getChildren().stream().map(n-&gt;(TileView)n)</span><br><span class="line">                .forEach(TileView::hide);<span class="comment">//此处是遍历tilePane面板上的每一个元素，并调用它的hide方法</span></span><br><span class="line">    &#125;, <span class="number">6</span>, TimeUnit.SECONDS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><ol start="10"><li>populateGrid函数实现, 用于随机绘制数字框，并添加到UI界面中</li><li>此函数的逻辑稍显复杂，主要使用到了Point2D类，产生9个数字框，并需要判断每个数字框不重合</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Pane <span class="title">populateGrid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Pane pane = <span class="keyword">new</span> Pane();</span><br><span class="line">    pane.setPrefSize(<span class="number">1024</span>, <span class="number">500</span>);</span><br><span class="line">    Random random = <span class="keyword">new</span> Random();</span><br><span class="line">    List&lt;Point2D&gt; usedPoints = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> randomX = random.nextInt(<span class="number">1024</span>/<span class="number">80</span>);</span><br><span class="line">        <span class="keyword">int</span> randomY = random.nextInt(<span class="number">500</span>/<span class="number">80</span>);</span><br><span class="line">        Point2D p = <span class="keyword">new</span> Point2D(randomX, randomY);</span><br><span class="line">        <span class="comment">//判断集合usedPoints中是否包含了p,如果包含了则重新创建，并添加到usedPoints集合中</span></span><br><span class="line">        <span class="keyword">while</span>(usedPoints.contains(p)) &#123;</span><br><span class="line">            randomX = random.nextInt(<span class="number">1024</span>/<span class="number">80</span>);</span><br><span class="line">            randomY = random.nextInt(<span class="number">500</span>/<span class="number">80</span>);</span><br><span class="line">            p = <span class="keyword">new</span> Point2D(randomX,randomY);</span><br><span class="line">        &#125;</span><br><span class="line">        usedPoints.add(p);</span><br><span class="line"><span class="comment">//此类是自建类，用于创建一个数字框</span></span><br><span class="line">        TileView tile = <span class="keyword">new</span> TileView(Integer.toString(i));</span><br><span class="line">        </span><br><span class="line">        tile.setTranslateX(randomX * <span class="number">80</span>);</span><br><span class="line">        tile.setTranslateY(randomY * <span class="number">80</span>);</span><br><span class="line">        tile.setOnMouseClicked(e-&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(tileSequence.isEmpty())  &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;游戏已结束&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            TileView correctTile = tileSequence.remove(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(tile == correctTile) &#123;</span><br><span class="line">                tile.show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                tileSequence.clear();</span><br><span class="line">                System.out.println(<span class="string">&quot;失败：游戏结束&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        pane.getChildren().add(tile);</span><br><span class="line">        tileSequence.add(tile);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pane;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TileView</span> <span class="keyword">extends</span> <span class="title">StackPane</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Text text;</span><br><span class="line">    TileView(String content) &#123;</span><br><span class="line">        Rectangle border = <span class="keyword">new</span> Rectangle(<span class="number">80</span>,<span class="number">80</span>,<span class="keyword">null</span>);</span><br><span class="line">        border.setStroke(Color.BLUEVIOLET);</span><br><span class="line">        border.setStrokeWidth(<span class="number">4</span>);</span><br><span class="line">        border.setStrokeType(StrokeType.INSIDE);</span><br><span class="line"></span><br><span class="line">        text = <span class="keyword">new</span> Text(content);</span><br><span class="line">        text.setFont(Font.font(<span class="number">64</span>));</span><br><span class="line">        getChildren().addAll(border,text);</span><br><span class="line">        setPickOnBounds(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">hide</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        text.setVisible(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        text.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="12"><li>最后运行程序</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">launch(args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>此程序融合了线程、集合、FX UI界面、事件、Stream， 亦有很多英文单词</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;游戏需要图形界面，虽然互联网时代Java FX 使用频率很小, 但是作为开发者，技多不压身，况且UI源码中有很多经典设计，是各类设计模式聚集地，可以让开发者加深对OOP、设计模式的理解。 如果把UI界面运用到游戏中去，既学到知识又增加趣味，岂不乐哉</summary>
      
    
    
    
    <category term="Java" scheme="https://zhsunbeam.github.io/categories/Java/"/>
    
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java" scheme="https://zhsunbeam.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>玩游戏学编程(1)-猜数字-JavaFX-UI</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97-JavaFX-UI/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97-JavaFX-UI/</id>
    <published>2022-07-17T01:19:56.081Z</published>
    <updated>2021-12-02T03:46:08.436Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在之前那篇中涉及到很多知识点，其中之一就是JavaFX，JavaFX 是一个开源的下一代客户端应用平台，适用于基于Java构建的桌面、移动端和嵌入式系统。JavaFX类似于Java Swing；学习桌面UI也不是一无是处，WEB前端不也是一样的需要UI，而且WEB前端已经把桌面软件犯过的错误再重犯一遍，然后再把桌面软件的解决方案和设计方案再重新发明一遍, 学习使用JavaFX对后续再学前端或许能更快进入状态。</p></blockquote><h3 id="一、窗口"><a href="#一、窗口" class="headerlink" title="一、窗口"></a>一、窗口</h3><blockquote><p>前面那篇代码中用到这些API： Application， Stage， Pane， VBox， Button</p></blockquote><blockquote><p>直接运行下面这段代码会出现一个窗口, Stage可翻译成舞台，调用show()方法就是显示这个舞台(窗口)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、控件"><a href="#二、控件" class="headerlink" title="二、控件"></a>二、控件</h3><blockquote><p>Button</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//按钮控件</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">        <span class="comment">//布局面板</span></span><br><span class="line">        Pane pane = <span class="keyword">new</span> Pane();</span><br><span class="line">        <span class="comment">//设置布局面板宽和高</span></span><br><span class="line">        pane.setPrefSize(<span class="number">900</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="comment">//将控件添加到布局面板</span></span><br><span class="line">        pane.getChildren().add(button);</span><br><span class="line">        <span class="comment">//创建一个场景，并将布局面板添加到其中</span></span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(pane);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用垂直布局容器VBox</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//垂直盒子容器</span></span><br><span class="line">        VBox vBox = <span class="keyword">new</span> VBox();</span><br><span class="line">        vBox.setPrefSize(<span class="number">900</span>, <span class="number">500</span>);</span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">        Button button1 = <span class="keyword">new</span> Button(<span class="string">&quot;cancel&quot;</span>);</span><br><span class="line">        Pane pane = <span class="keyword">new</span> Pane();</span><br><span class="line">        pane.setPrefSize(<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//将控件添加到VBox</span></span><br><span class="line">        vBox.getChildren().addAll(pane,button,button1);</span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(vBox);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>画图: 使用Rectangle类</p><p>为按钮添加事件</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Pane pane = <span class="keyword">new</span> Pane();</span><br><span class="line">        pane.setPrefSize(<span class="number">800</span>, <span class="number">300</span>);</span><br><span class="line">        Tile tile = <span class="keyword">new</span> Tile(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        pane.getChildren().add(tile);</span><br><span class="line">        <span class="comment">//创建按钮并为按钮设置事件监听</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;点击隐藏矩形框&quot;</span>);</span><br><span class="line">        <span class="comment">//此处使用了lambda表达式</span></span><br><span class="line">        button.setOnAction(e-&gt;&#123;</span><br><span class="line">            tile.hide();<span class="comment">//隐藏tile</span></span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(pane);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Tile</span> <span class="keyword">extends</span> <span class="title">StackPane</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个文本</span></span><br><span class="line">        <span class="keyword">private</span> Text text;</span><br><span class="line">        Tile(String content) &#123;</span><br><span class="line">            <span class="comment">//定义一个矩形</span></span><br><span class="line">            Rectangle rect = <span class="keyword">new</span> Rectangle(<span class="number">80</span>,<span class="number">80</span>,<span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">//颜色</span></span><br><span class="line">            rect.setStroke(Color.AQUAMARINE);</span><br><span class="line">            <span class="comment">//宽度</span></span><br><span class="line">            rect.setStrokeWidth(<span class="number">4</span>);</span><br><span class="line">            <span class="comment">//类型</span></span><br><span class="line">            rect.setStrokeType(StrokeType.INSIDE);</span><br><span class="line"><span class="comment">//创建文本</span></span><br><span class="line">            text = <span class="keyword">new</span> Text(content);</span><br><span class="line">            <span class="comment">//设置文本字体</span></span><br><span class="line">            text.setFont(Font.font(<span class="number">64</span>));</span><br><span class="line">            <span class="comment">//添加到当前布局面板</span></span><br><span class="line">            <span class="keyword">this</span>.getChildren().addAll(rect, text);</span><br><span class="line">            setPickOnBounds(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">hide</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            text.setVisible(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            text.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>如果想生成多个矩形，而且位置随机，可以使用Random类， 此类用于产生随机数。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Parent <span class="title">populateGrid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Pane pane = <span class="keyword">new</span> Pane();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        TileView tile = <span class="keyword">new</span> TileView(Integer.toString(i));</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">int</span> randomX = random.nextInt(<span class="number">1024</span>/<span class="number">80</span>);</span><br><span class="line">        <span class="keyword">int</span> randomY = random.nextInt(<span class="number">500</span>/<span class="number">80</span>);</span><br><span class="line"></span><br><span class="line">        tile.setTranslateX(randomX * <span class="number">80</span>);</span><br><span class="line">        tile.setTranslateY(randomY * <span class="number">80</span>);</span><br><span class="line"></span><br><span class="line">        tile.setOnMouseClicked(e-&gt;&#123;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        pane.getChildren().add(tile);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pane;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用下面的代码测试populateGrid方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//===定义一个垂直盒子容器,populateGrid方法返回的Pane添加进去</span></span><br><span class="line">        VBox vBox = <span class="keyword">new</span> VBox();</span><br><span class="line">        vBox.setPrefSize(<span class="number">1000</span>, <span class="number">500</span>);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//populateGrid函数将会返回一个Pane，Pane存放多个随机的矩形</span></span><br><span class="line">        vBox.getChildren().add( populateGrid());</span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(vBox);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>以上代码简单介绍并使用JavaFX，对上一篇中的技术分解</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在之前那篇中涉及到很多知识点，其中之一就是JavaFX，JavaFX 是一个开源的下一代客户端应用平台，适用于基于Java构建的桌面、移动端和嵌入式系统。JavaFX类似于Java Swing；学习桌面UI也不是一无是处，WEB前端不也是一样的需要</summary>
      
    
    
    
    <category term="Java" scheme="https://zhsunbeam.github.io/categories/Java/"/>
    
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java" scheme="https://zhsunbeam.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>玩游戏学编程(1)-猜数字-Stream</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(1)-%E7%8C%9C%E6%95%B0%E5%AD%97-Stream/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(1)-%E7%8C%9C%E6%95%B0%E5%AD%97-Stream/</id>
    <published>2022-07-17T01:19:56.078Z</published>
    <updated>2022-07-17T03:39:58.166Z</updated>
    
    <content type="html"><![CDATA[<p>在这一篇<a href="http://codecool.top/2021/11/30/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97UI%E7%95%8C%E9%9D%A2/">玩游戏学编程(1)-猜数字</a>中出现了Stream相关技术， 先看看代码其中的一段代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.tilePane = <span class="keyword">this</span>.populateGrid();  </span><br><span class="line"><span class="keyword">this</span>.root.getChildren().set(<span class="number">0</span>, tilePane);  </span><br><span class="line"><span class="comment">//6秒后执行线程,计划任务</span></span><br><span class="line"><span class="keyword">this</span>.servicePool.schedule(</span><br><span class="line">    ()-&gt;&#123;</span><br><span class="line">        tilePane.getChildren()</span><br><span class="line">            .stream()</span><br><span class="line">            .map(n-&gt;(Tile)n)</span><br><span class="line">        .forEach(Tile::hide);</span><br><span class="line">&#125;, <span class="number">6</span>, TimeUnit.SECONDS);</span><br></pre></td></tr></table></figure><blockquote><p>代码中populateGrid()函数会返回一个Pane, 这个Pane中包含多个Tile, 每个Tile是一个矩形方框，其中还有一个数字, 那就意味着tilePane这个对象中有多个控件，我们可以通过循环或Stream遍历tilePane中的每一个控件;</p></blockquote><blockquote><p>this.servicePool.schedule(lambda表达式）它可以传递一个Lambda表达式， 这里可以改成传统的自定义线程类对象，只不过现在可以用Lambda表达式的方式简写, 因为线程中的Runnable接口也只有一个抽象方法， 传统的代码写法如下:</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个线程类，里边包含异步任务</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScheduleThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ObservableList&lt;Node&gt; list = tilePane.getChildren();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            TileView tv = (TileView)list.get(i);</span><br><span class="line">            tv.hide();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建一个异步任务，6秒后执行线程的run()方法</span></span><br><span class="line"><span class="keyword">this</span>.servicePool.schedule(<span class="keyword">new</span> ScheduleThread(), <span class="number">6</span>, TimeUnit.SECONDS);</span><br></pre></td></tr></table></figure><blockquote><p>遍历可以采用以下方式：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取面板上的所有控件元素,返回的是一个集合</span></span><br><span class="line">ObservableList&lt;Node&gt; list = tilePane.getChildren();</span><br><span class="line"><span class="comment">//遍历集合</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">    <span class="comment">//将集合中的每一个元素获取到，并强制转换成Tile对象</span></span><br><span class="line">    Tile tile = (TileView)list.get(i);</span><br><span class="line">    <span class="comment">//调用控件元素的hide方法</span></span><br><span class="line">    tile.hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上这种方案很传统，代码繁杂，如果采用Lambda和Stream的方式，代码更简洁：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.servicePool.schedule( ()-&gt;&#123;</span><br><span class="line">            tilePane.getChildren().stream().map(n-&gt;(Tile)n)</span><br><span class="line">            .forEach(Tile::hide);</span><br><span class="line">&#125;, </span><br><span class="line"><span class="number">6</span>, TimeUnit.SECONDS);</span><br></pre></td></tr></table></figure><p>下面我们再来举个例子， 假如我们有一个ArrayList集合，其中存放了一些数据，那么遍历这种集合有两种方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">fruitList.add(<span class="string">&quot;苹果&quot;</span>);</span><br><span class="line">fruitList.add(<span class="string">&quot;香蕉&quot;</span>);</span><br><span class="line">fruitList.add(<span class="string">&quot;西瓜&quot;</span>);</span><br><span class="line"><span class="comment">//第一种遍历方式，每获取一个元素直接输出, 此种方式属于外部迭代</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fruitList.size(); i++) &#123;</span><br><span class="line">    String fruit = fruitList.get(i);</span><br><span class="line">    System.out.println(fruit);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//另一种方式，采用forEach,其实也是外部迭代，只是采用了Lambda表达式</span></span><br><span class="line">fruitList.forEach(item-&gt;&#123;</span><br><span class="line">            System.out.println(item);</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="comment">//如果仅仅是输出集合中的每一个元素，还可以使用更简单的写法</span></span><br><span class="line">fruitList.forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>我们可以使用Stream对这个集合进行过滤、筛选、切片、映射等操作, 这些操作称为对集合的<strong>中间操作</strong>，最后可以对Stream进行关闭操作称为<strong>终端操作</strong>， 比如我们使用java.util.stream.Stream接口中的map方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fruitList.stream().map(item-&gt;&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;&amp;&quot;</span>+item+<span class="string">&quot;&amp;&quot;</span>;</span><br><span class="line">        &#125;).collect(Collectors.toList()).forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>这段代码的意思是将迭代(遍历)集合中的每一个元素，迭代过程中每遇到一个元素会将其传递给Lambda表达式对应的方法，由方法处理完成之后返回，此处是将每个元素的前后添加一个&amp;符号，最后处理完所有元素后再将其转换为List集合 (collect 终端操作), 那么对于猜数字游戏中的如下代码意思是通过Stream接口的map方法，过程是将每一个元素转换成Tile对象，然后通过forEach迭代每一个元素并调用它的hide方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tilePane.getChildren().stream().map(n-&gt;(Tile)n)</span><br><span class="line">            .forEach(Tile::hide);</span><br></pre></td></tr></table></figure><blockquote><p>初学者如果不理解Stream，只能通过大量的练习去熟练，如果能有函数式编程语言基础便更容易理解</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在这一篇&lt;a href=&quot;http://codecool.top/2021/11/30/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97UI%E7%95</summary>
      
    
    
    
    <category term="Java" scheme="https://zhsunbeam.github.io/categories/Java/"/>
    
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java" scheme="https://zhsunbeam.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>玩游戏学编程(1)-猜数字-Lambda</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(1)-%E7%8C%9C%E6%95%B0%E5%AD%97-Lambda%E5%92%8CStream/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/Java/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(1)-%E7%8C%9C%E6%95%B0%E5%AD%97-Lambda%E5%92%8CStream/</id>
    <published>2022-07-17T01:19:56.075Z</published>
    <updated>2022-07-17T02:43:23.633Z</updated>
    
    <content type="html"><![CDATA[<h5 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h5><p>在这一篇中出现了Lambda表达式和Stream<a href="http://codecool.top/2021/11/30/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97UI%E7%95%8C%E9%9D%A2/">玩游戏学编程(1)-猜数字</a>， 它们在Java应用开发中现已成为常用的开发技术， Lambda表达式这玩艺在函数式编程语言如Ruby、JavaScript、Python中早已存在，Java只是把他们学了过来。你可以把Lambda表达式看作是一种匿名功能，也就是没有名称的方法,可以认为lambda它是一块代码，我们在使用时可以将这块代码传递出去，这样它后续可以执行一次或多次，如果你了解过匿名类，那么对Lambda的写法就不会感到太生涩。</p><blockquote><p>Java中没有函数类型，如果要实现Lambda表达式就得将函数表达为对象，也就是实现了特定接口的类的实例，当然你先得对面向对象中的接口以及实现有一些经验。</p></blockquote><h5 id="简单的使用"><a href="#简单的使用" class="headerlink" title="简单的使用"></a>简单的使用</h5><blockquote><p>任务：对一个数组进行排序，调用数组排序函数Arrays.sort(), 使用Lambda表达式自定义排序方式</p></blockquote><ol><li><p>默认排序方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a = &#123;<span class="number">3</span>,<span class="number">21</span>,<span class="number">4</span>,<span class="number">99</span>,<span class="number">32</span>,<span class="number">87</span>,<span class="number">9</span>&#125;;</span><br><span class="line">Arrays.sort(a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">System.out.print(a[i]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出排序结果：3,4,9,21,32,87,99,  如果我们需要控制比较结果，比如说从大到小排列，就必须自定义比较逻辑，这个比较逻辑需要实现一个接口Comparator, 这个接口称为<strong>函数式接口</strong>,而且这个接口只有一个抽象方法compare, 代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ComparatorNumber</span> </span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer m, Integer n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(m&gt;n) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Integer[] ary = &#123;<span class="number">3</span>,<span class="number">21</span>,<span class="number">4</span>,<span class="number">99</span>,<span class="number">32</span>,<span class="number">87</span>,<span class="number">9</span>&#125;;</span><br><span class="line"><span class="comment">//创建比较对象</span></span><br><span class="line">ComparatorNumber comparatorNumber = <span class="keyword">new</span> ComparatorNumber();</span><br><span class="line"><span class="comment">//第二个参数为自定义比较对象</span></span><br><span class="line">Arrays.sort(ary, comparatorNumber);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ary.length; i++) &#123;</span><br><span class="line">System.out.print(ary[i]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ComparatorNumber类的compare方法为比较方式的实现</p></blockquote></li><li><p>使用Lambda表达式</p><p>上面的代码可以直接换成lambda表达式的方式，更简洁, 可以把它称为箭头函数，具体的语法如下: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(参数1, 参数2)  -&gt; &#123; 函数实现 &#125;    </span><br></pre></td></tr></table></figure><p>如果只有一个参数，语法还可以是下面这样:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">形参1 -&gt; &#123;函数实现&#125;</span><br></pre></td></tr></table></figure><p> 如果没有函数的实现只有一个返回代码，还可以用下面这种写法:</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">形参1 -&gt; 返回的变量</span><br></pre></td></tr></table></figure><p> 比较函数的改造如下, 上面创建的比较类就不需要了 :</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Arrays.sort(ary, (m,n)-&gt;&#123;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;n) &#123;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>如果希望一个接口成为函数式接口，只需要这个接口中仅有一个抽象方法即可</p></blockquote><blockquote><p>如果对sort方法的第二个参数已有实现的代码，我们也可以直接拿过来使用, 下面的代码就是直接使用了Integer的比较方法compareTo,只是它的比较方式是从小到大，使用方法如下: </p></blockquote> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Arrays.sort(ary,Integer::compareTo);</span><br></pre></td></tr></table></figure><blockquote><p>Java 类库中有很多这样的接口，比如多线程中的Runnable接口, 那么对于<a href="http://codecool.top/2021/11/30/%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%AD%A6%E7%BC%96%E7%A8%8B(2)-%E7%8C%9C%E6%95%B0%E5%AD%97UI%E7%95%8C%E9%9D%A2/">玩游戏学编程(1)-猜数字</a>这篇中的如下代码应该就能理解了，按钮的事件监听器对象本身也需要实现一个接口EventHandler, 并且此接口仅有一个抽象方法，此时可以使用Lambda表达式</p></blockquote> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ButtonLis</span>  <span class="keyword">implements</span> <span class="title">EventHandler</span>&lt;<span class="title">ActionEvent</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(ActionEvent event)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button.setOnAction(<span class="keyword">new</span> ButtonLis());</span><br><span class="line"></span><br><span class="line"><span class="comment">//忽略上面的代码，直接使用Lambda表达式</span></span><br><span class="line">Button button = <span class="keyword">new</span> Button(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">button.setOnAction(e-&gt;startGame());<span class="comment">//开始按钮事件,startGame()是具体的实现</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h5&gt;&lt;p&gt;在这一篇中出现了Lambda表达式和Stream&lt;a href=&quot;http://codecool.top/2021/11/30/%E7%8E</summary>
      
    
    
    
    <category term="Java" scheme="https://zhsunbeam.github.io/categories/Java/"/>
    
    
    <category term="编程基础" scheme="https://zhsunbeam.github.io/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java" scheme="https://zhsunbeam.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>一个简单的前端机试题</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/JavaScript/JavaScript-Interview-1/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/JavaScript/JavaScript-Interview-1/</id>
    <published>2022-07-17T01:19:56.056Z</published>
    <updated>2022-07-17T03:30:34.935Z</updated>
    
    <content type="html"><![CDATA[<p>一个简单的前端机试题，使用原生JavaScript或是JQuery又或是Vue，如果能快速搞定，用什么无所谓啦</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/2022/07/17/JavaScript/JavaScript-Interview-1/1.png"></p><h2 id="还是有几点要求的"><a href="#还是有几点要求的" class="headerlink" title="还是有几点要求的"></a>还是有几点要求的</h2><ol><li>点击固定标签可以修改选中状态，选中方式为多选</li><li>自定义输入框可输入10个字以内的标签（限制中文）</li><li>点击确认会在标签后面新增一个自定义名称的标签，自定义标签数量超过5个之后，输入框和确认按钮置灰，不可点击</li><li>点击确认时，需要对当前自定义标签的名称进行去重，如果标签重复，需要在确认按钮后面用红色的文字提示“该标签已重复”</li><li>自定义的标签右上角会有个删除的按钮，点击删除按钮会删除该自定义标签</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个简单的前端机试题，使用原生JavaScript或是JQuery又或是Vue，如果能快速搞定，用什么无所谓啦&lt;/p&gt;
&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;im</summary>
      
    
    
    
    <category term="前端开发" scheme="https://zhsunbeam.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
    <category term="HTML" scheme="https://zhsunbeam.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>玩游戏学前端-贪吃蛇</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/JavaScript/snake/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/JavaScript/snake/</id>
    <published>2022-07-17T01:19:56.024Z</published>
    <updated>2022-07-17T03:22:52.563Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在游戏项目中学JavaScript"><a href="#在游戏项目中学JavaScript" class="headerlink" title="在游戏项目中学JavaScript"></a>在游戏项目中学JavaScript</h3><hr><p>WEB前端基础技术包含HTML5/CSS3/JavaScript, 当然除了基础技术前端还有框架如React,Vue等, 其中相对难一点的便是JavaScript和CSS3，CSS3学起来开心多了, JavaScript编程语言可没那么有趣，如果用它来实现游戏，我想趣味性要超越CSS3, 俗话说：兴趣是最好的老师；下面我们一步步来实现这个小游戏，在开发过程中去学习JavaScript语言和CSS3的关键技术要点。效果如下图所示</p><p><img src="/2022/07/17/JavaScript/snake/snake-main.gif"></p><p><a href="/snake/index.html">贪吃蛇</a></p><h3 id="贪吃蛇游戏"><a href="#贪吃蛇游戏" class="headerlink" title="贪吃蛇游戏"></a>贪吃蛇游戏</h3><hr><h4 id="1-HTML5和CSS3设计游戏界面"><a href="#1-HTML5和CSS3设计游戏界面" class="headerlink" title="1. HTML5和CSS3设计游戏界面"></a>1. HTML5和CSS3设计游戏界面</h4><ul><li><p>HTML页面组成，常用标签和meta</p></li><li><p>准确使用HTML标签div, 标签中的基本属性</p></li><li><p>为HTML标签添加样式</p></li><li><p>CSS3样式编写，标签选择器，ID选择器，类选择器</p></li><li><p>CSS3中的常用单位 px,rpx,em,rem,vh,vw,vmin,vmax</p></li><li><p>CSS3边框和颜色</p></li><li><p>CSS3 Grid网格布局</p></li></ul><h4 id="2-HTML与Javascript"><a href="#2-HTML与Javascript" class="headerlink" title="2. HTML与Javascript"></a>2. HTML与Javascript</h4><ul><li>ES5和ES6的基本认知</li><li>在HTML中添加Javascript脚本支持</li><li>Javascript语言基础: 变量、程序逻辑、函数、对象</li><li>Javascript的模块化</li></ul><h4 id="3-Javascript操作HTML元素-DOM"><a href="#3-Javascript操作HTML元素-DOM" class="headerlink" title="3. Javascript操作HTML元素 - DOM"></a>3. Javascript操作HTML元素 - DOM</h4><ul><li>使用Javascript选择HTML元素</li><li>Javascript动画</li><li>Javascript创建HTML元素</li><li>Javascript设置HTML元素样式</li><li>Javascript定义游戏核心逻辑</li></ul><h4 id="4-绘制Snake"><a href="#4-绘制Snake" class="headerlink" title="4. 绘制Snake"></a>4. 绘制Snake</h4><ul><li><p>Javascript数组和DOM操作</p></li><li><p>创建Snake Head，定义速度常量</p></li><li><p>移动Snake Head</p></li><li><p>使用Javascript事件控制Snake方向</p></li><li><p>创建Snake Body并绘制蛇的身体</p></li></ul><h4 id="6-绘制Food"><a href="#6-绘制Food" class="headerlink" title="6. 绘制Food"></a>6. 绘制Food</h4><ul><li><p>Javascript数组和DOM操作</p></li><li><p>使用Javascript DOM创建Food</p></li><li><p>Javascript创建随机数</p></li><li><p>根据随机数位置显示Food</p></li></ul><h4 id="7-Snake和Food"><a href="#7-Snake和Food" class="headerlink" title="7. Snake和Food"></a>7. Snake和Food</h4><ul><li>Snake吃Food，Snake增长逻辑</li></ul><h4 id="7-游戏结束"><a href="#7-游戏结束" class="headerlink" title="7. 游戏结束"></a>7. 游戏结束</h4><ul><li>Snake移动范围边界判断</li><li>游戏结束判断</li></ul><h4 id><a href="#" class="headerlink" title></a></h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;在游戏项目中学JavaScript&quot;&gt;&lt;a href=&quot;#在游戏项目中学JavaScript&quot; class=&quot;headerlink&quot; title=&quot;在游戏项目中学JavaScript&quot;&gt;&lt;/a&gt;在游戏项目中学JavaScript&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;WEB前端</summary>
      
    
    
    
    <category term="前端开发" scheme="https://zhsunbeam.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>玩游戏学前端-贪吃蛇-Grid布局</title>
    <link href="https://zhsunbeam.github.io/2022/07/17/JavaScript/snake-grid/"/>
    <id>https://zhsunbeam.github.io/2022/07/17/JavaScript/snake-grid/</id>
    <published>2022-07-17T01:19:56.022Z</published>
    <updated>2022-07-17T03:23:22.864Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CSS-Grid网格布局"><a href="#CSS-Grid网格布局" class="headerlink" title="CSS Grid网格布局"></a>CSS Grid网格布局</h3><hr><p>在贪吃蛇游戏中，我们使用了CSS中的Grid网格布局，如果不用Grid，你可以使用Canvas绘图。其实在其它编程语言的UI设计中，早已有此类布局方案,比如Java中的GridLayout，感觉CSS把后端语言的UI设计又重新走一遍，而且进展还比较慢 , 多年以前我们还只能使用position,float和各种骇客技术实现布局,直至出现Flex、Grid才真正意义上的解脱；</p><h4 id="网格布局示例图"><a href="#网格布局示例图" class="headerlink" title="网格布局示例图"></a>网格布局示例图</h4><hr><p><img src="/2022/07/17/JavaScript/snake-grid/header.jpg"></p><h4 id="HTML结构"><a href="#HTML结构" class="headerlink" title="HTML结构"></a>HTML结构</h4><hr><p>需要将想要控制的元素包装在父容器DIV中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>让我们为div添加一些样式，这样就可以轻松地区分不同盒子,这里使用了 display:grid，也就是网格布局</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> black solid;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: indianred;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: grid</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid1.png"></p><h4 id="Grid-template-columns-和-Grid-template-rows"><a href="#Grid-template-columns-和-Grid-template-rows" class="headerlink" title="Grid-template-columns 和 Grid-template-rows"></a>Grid-template-columns 和 Grid-template-rows</h4><hr><h5 id="grid-template-columns-规则"><a href="#grid-template-columns-规则" class="headerlink" title="grid-template-columns 规则"></a>grid-template-columns 规则</h5><p>对于grid网格布局，我们首先需要了解的是 <code>grid-template-columns</code> 和 grid-template-rows 这两条规则。这两条规则控制了网格的形状。这些规则的值可以是长度、百分比或网格中空闲空间的一部分。还可以将它们设置为auto，这样做将会填充div盒子的剩余的空间。看例子:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid2.png"></p><blockquote><p>上面代码片断中我们设置了三列，每列100px, 但是wrapper下有四个div,所以会有一个div换行显示， display的值还可以设置为inline-grid</p></blockquote><p>修改一下中间设置为<strong>auto</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="number">100px</span> auto <span class="number">100px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid3.png"></p><blockquote><p>上面代码中，中间值使用了auto, 那么中间那个div将填充所有剩余部分</p></blockquote><p>也可以<strong>使用fr</strong>, 网格布局提供了fr(fraction片段的意思)，它用于表示比例关系，如果列宽度都为1fr , 那么将平分此行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid4.png"></p><blockquote><p>上面代码中将一行分为四列，每列宽度一样</p></blockquote><p>修改一下值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.wrapper &#123;</span><br><span class="line">  display: grid;</span><br><span class="line">  grid-template-columns: 1fr 2fr 3fr 1fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid5.png"></p><blockquote><p>可以看出第二列是第一列的2倍，第三列的大小是前面二列的和; 试着修改最后一列的大小</p></blockquote><h5 id="grid-template-columns-和-grid-template-rows-规则"><a href="#grid-template-columns-和-grid-template-rows-规则" class="headerlink" title="grid-template-columns 和 grid-template-rows 规则"></a>grid-template-columns 和 grid-template-rows 规则</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">  grid-template-rows: <span class="number">50px</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid6.png"></p><blockquote><p>上面定义二行二列，每一行的高度都为50px, 如果将第一个50px改成其它值如30px, 那么第一行高度将为30px</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="number">100px</span> <span class="number">20px</span> <span class="number">250px</span>;</span><br><span class="line">  grid-template-rows: <span class="number">150px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid7.png"></p><blockquote><p>上面定义二行三列，第一行高150px, 第二行高40px, 前面3个div成为一行中三列，最后一个div单独一行</p></blockquote><h5 id="grid-template-重复规则：-Repeat"><a href="#grid-template-重复规则：-Repeat" class="headerlink" title="grid-template 重复规则： Repeat"></a>grid-template 重复规则： Repeat</h5><p>如果你的网格布局中有一个重复的元素，你可以使用repeat并告诉它重复多少次相同的元素。<br>例如，假设你有12个元素，你想让它们以相同的宽度水平放置。您可以在grid-template-column使用repeat(12, 1fr)。</p><p><img src="/2022/07/17/JavaScript/snake-grid/grid8.png"></p><p>也可以像下面这样</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">1</span>fr <span class="number">5</span>fr <span class="number">10</span>fr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid9.png"></p><blockquote><p>上面代码中重复4个div元素，1，2，3是第一部分，分别为1fr, 5fr, 10fr; 后续依此类推</p></blockquote><h5 id="Grid-auto-columns-和-Grid-auto-rows-规则"><a href="#Grid-auto-columns-和-Grid-auto-rows-规则" class="headerlink" title="Grid-auto-columns 和 Grid-auto-rows 规则"></a>Grid-auto-columns 和 Grid-auto-rows 规则</h5><p>此规则帮助你设置网格单元格的宽度和高度。如果不设置此规则，网格的行和列将根据内容展开。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">1</span>fr);</span><br><span class="line">  grid-<span class="attribute">auto</span>-rows: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-10.png"></p><blockquote><p>上面代码重复4个元素，因为总共有12个元素，所以拆分成了3行，每行100px高</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="built_in">repeat</span>(<span class="number">6</span>, <span class="number">1</span>fr);</span><br><span class="line">  grid-<span class="attribute">auto</span>-rows: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-12.png"></p><blockquote><p>上面代码重复6个元素，因为总共有12个元素，所以拆分成了2行，每行100px高</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">1</span>fr);</span><br><span class="line">  grid-<span class="attribute">auto</span>-rows: <span class="number">20px</span> <span class="number">40px</span> <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-11.png"></p><h5 id="minmax-函数"><a href="#minmax-函数" class="headerlink" title="minmax() 函数"></a>minmax() 函数</h5><p>网格自动规则的一个很好的特性是minmax函数。<br>只需将最小值设置为第一个参数，将最大值设置为第二个参数。如果将第二个参数设置为auto，则会得到响应式单元格大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">1</span>fr);</span><br><span class="line">  grid-<span class="attribute">auto</span>-rows: <span class="built_in">minmax</span>(<span class="number">50px</span>, auto)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-13.png"></p><p><img src="/2022/07/17/JavaScript/snake-grid/grid-14.png"></p><blockquote><p>以上两个结果是CSS相同，div中内容不同的情况</p></blockquote><h4 id="Grid-gap"><a href="#Grid-gap" class="headerlink" title="Grid-gap"></a>Grid-gap</h4><hr><p>顾名思义，该规则在网格单元格之间创建了一个间隙(gap)。<br>如果你使用grid-gap: 5px，你会在每个单元格之间得到5px的间隙。或者，只能设置行或列间隙，分别为grid-row-gap: 5px和grid-column-gap: 5px。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">1</span>fr);</span><br><span class="line">  grid-<span class="attribute">auto</span>-rows: <span class="built_in">minmax</span>(<span class="number">50px</span>, auto);</span><br><span class="line">  grid-gap: <span class="number">5px</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-15.png"></p><h4 id="子div元素规则"><a href="#子div元素规则" class="headerlink" title="子div元素规则"></a>子div元素规则</h4><hr><p>到目前为止，我们只关注网格的形状和在网格中流动的项。现在我们将学习如何单独控制每一项。</p><p>为了定位每一项，我们使用网格线作为参考。下面是2x4网格的行和列，分别用黑色和橙色表示。</p><p><img src="/2022/07/17/JavaScript/snake-grid/grid.jpg"></p><p>使用带有行号的 grid-column 和 grid-row 规则来定位元素。</p><p>例如，如果我们为第一个子div设置grid-column: 1/3，它将使用网格中的前两个单元格, 也就是第1格到第3格，但不包含第3格, 这种做法类似于在Excel中的列合并。</p><p>grid-column属性是grid-column-start和grid-column-end的合并简写形式，grid-row属性是grid-row-start属性和grid-row-end的合并简写形式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="built_in">repeat</span>(<span class="number">4</span>, <span class="number">1</span>fr);</span><br><span class="line">  grid-<span class="attribute">auto</span>-rows: <span class="number">100px</span>;</span><br><span class="line">  grid-gap: <span class="number">5px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="selector-class">.div1</span>&#123;</span><br><span class="line">  grid-column: <span class="number">1</span>/<span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-16.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  grid-column: &lt;start-line&gt; / &lt;end-line&gt;;</span><br><span class="line">  grid-row: &lt;start-line&gt; / &lt;end-line&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.div1  &#123;</span><br><span class="line">  grid-column: 1 / 3;  /*占用 1~2 列, 也就是跨列*/</span><br><span class="line">  grid-row: 1 / 2;</span><br><span class="line">&#125;</span><br><span class="line">/* 等同于 */</span><br><span class="line">.div1  &#123;</span><br><span class="line">  grid-column-start: 1;</span><br><span class="line">  grid-column-end: 3;</span><br><span class="line">  grid-row-start: 1;</span><br><span class="line">  grid-row-end: 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看下面示例，div1元素跨列和行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span>&#123;</span><br><span class="line">  grid-column: <span class="number">1</span>/<span class="number">3</span>;</span><br><span class="line">  grid-row: <span class="number">1</span>/<span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-17.png"></p><p>也可以使用grid-arge</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span>&#123;</span><br><span class="line">  grid-area: <span class="number">2</span>/<span class="number">2</span>/<span class="number">3</span>/<span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-18.png"></p><h4 id="Grid-area-和-grid-template-areas"><a href="#Grid-area-和-grid-template-areas" class="headerlink" title="Grid-area 和 grid-template-areas"></a>Grid-area 和 grid-template-areas</h4><hr><p>下面的示例稍复杂一点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span>页头<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;leftCol&quot;</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;rightCol&quot;</span>&gt;</span>右侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;midTop&quot;</span>&gt;</span>中间上方<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;midBottom&quot;</span>&gt;</span>中间下方<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>页脚<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line">   grid-area: header;</span><br><span class="line">   <span class="attribute">background-color</span>: LightSeaGreen ;</span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line"> <span class="selector-class">.leftCol</span>&#123;</span><br><span class="line">   grid-area: leftCol;</span><br><span class="line">   <span class="attribute">background-color</span>: orange;</span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line"> <span class="selector-class">.rightCol</span>&#123;</span><br><span class="line">   grid-area: rightCol;</span><br><span class="line">   <span class="attribute">background-color</span>: lightblue;</span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.midTop</span>&#123;</span><br><span class="line">   grid-area: midTop;</span><br><span class="line">   <span class="attribute">background-color</span>: lightgrey;</span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line"> <span class="selector-class">.midBottom</span>&#123;</span><br><span class="line">   grid-area: midBottom;</span><br><span class="line">   <span class="attribute">background-color</span>: pink;</span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line"> <span class="selector-class">.footer</span>&#123;</span><br><span class="line">   grid-area: footer;</span><br><span class="line">   <span class="attribute">background-color</span>: lightgreen;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="number">1</span>fr <span class="number">4</span>fr <span class="number">4</span>fr <span class="number">1</span>fr;</span><br><span class="line">  grid-template-rows: <span class="number">50px</span> <span class="number">100px</span> <span class="number">100px</span> <span class="number">30px</span>;</span><br><span class="line">  grid-template-areas:</span><br><span class="line">  <span class="string">&quot;header header header header&quot;</span></span><br><span class="line">  <span class="string">&quot;leftCol midTop midTop rightCol&quot;</span></span><br><span class="line">  <span class="string">&quot;leftCol midBottom midBottom rightCol&quot;</span></span><br><span class="line">  <span class="string">&quot;footer footer footer footer&quot;</span>;</span><br><span class="line">  grid-gap: <span class="number">5px</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>布局结果</p><p><img src="/2022/07/17/JavaScript/snake-grid/grid-19.png"></p><p>如果想让页脚只取两列并居中，那么我只需在网格模板区域中用点(.)替换页脚的第一个和最后一个。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: <span class="number">1</span>fr <span class="number">4</span>fr <span class="number">4</span>fr <span class="number">1</span>fr;</span><br><span class="line">  grid-template-rows: <span class="number">50px</span> <span class="number">100px</span> <span class="number">100px</span> <span class="number">30px</span>;</span><br><span class="line">  grid-template-areas:</span><br><span class="line">  <span class="string">&quot;header header header header&quot;</span></span><br><span class="line">  <span class="string">&quot;leftCol midTop midTop rightCol&quot;</span></span><br><span class="line">  <span class="string">&quot;leftCol midBottom midBottom rightCol&quot;</span></span><br><span class="line">  <span class="string">&quot;. footer footer .&quot;</span>;</span><br><span class="line">  grid-gap: <span class="number">5px</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/07/17/JavaScript/snake-grid/grid-19.png"></p><h3 id="你需要grid"><a href="#你需要grid" class="headerlink" title="你需要grid"></a>你需要grid</h3><hr><p>Grid 布局还有很多其它属性，可以参考官方文档， 有了上述基础，我们就可以画出贪吃蛇游戏的界面了，马上为你呈现使用Grid有多么简单</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;CSS-Grid网格布局&quot;&gt;&lt;a href=&quot;#CSS-Grid网格布局&quot; class=&quot;headerlink&quot; title=&quot;CSS Grid网格布局&quot;&gt;&lt;/a&gt;CSS Grid网格布局&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;在贪吃蛇游戏中，我们使用了CSS中的Grid网格布</summary>
      
    
    
    
    <category term="前端开发" scheme="https://zhsunbeam.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaScript" scheme="https://zhsunbeam.github.io/tags/JavaScript/"/>
    
  </entry>
  
</feed>
